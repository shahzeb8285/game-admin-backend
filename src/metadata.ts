/* eslint-disable */
export default async () => {
    const t = {};
    return { "@nestjs/graphql/plugin": { "models": [[import("./auth/models/token.model"), { "Token": { access_token: {}, refresh_token: {} } }], [import("./auth/models/auth.model"), { "Auth": { user: { type: () => Object } } }], [import("./auth/dto/login.input"), { "LoginInput": { admin_name: {}, password: {} } }], [import("./auth/dto/signup.input"), { "SignupInput": { email: {}, password: {}, firstname: { nullable: true }, lastname: { nullable: true } } }], [import("./auth/dto/refresh-token.input"), { "RefreshTokenInput": { token: {} } }], [import("./admins/entities/admin.entity"), { "AdminAccesses": { admin_access_id: { nullable: true }, access_name: { nullable: true } }, "AdminRoleAccesses": { admin_role_id: {}, admin_access_id: {}, admin_accesses: { nullable: true } }, "AdminRoles": { admin_role_id: {}, admin_role_name: {}, enabled: {}, role_accesses: { nullable: true } }, "Admin": { admin_id: {}, admin_name: {}, admin_role_id: {}, created_by: {}, cdate: {}, udate: {}, enabled: {}, admin_roles: { nullable: true } } }], [import("./admins/dto/create-admin.input"), { "CreateAdminInput": { admin_name: {}, admin_password: {}, admin_roles_id: {} } }], [import("./admins/dto/update-admin.input"), { "UpdateAdminInput": { admin_id: {}, admin_name: { nullable: true }, admin_password: { nullable: true }, admin_role_id: { nullable: true }, enabled: { nullable: true } } }], [import("./admins/entities/loginhistory.entity"), { "LoginHistory": { login_id: {}, admin_id: {}, ip: {}, login_time: {}, admins: { nullable: true } } }], [import("./@generated/prisma/nested-string-filter.input"), { "NestedStringFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/string-filter.input"), { "StringFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, mode: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/nested-date-time-filter.input"), { "NestedDateTimeFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/date-time-filter.input"), { "DateTimeFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/nested-bool-filter.input"), { "NestedBoolFilter": { equals: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/bool-filter.input"), { "BoolFilter": { equals: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/admins-list-relation-filter.input"), { "AdminsListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-where.input"), { "admin_accessesWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, admin_access_id: { nullable: true }, access_name: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/prisma/admin-accesses-relation-filter.input"), { "Admin_accessesRelationFilter": { is: { nullable: true }, isNot: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-where.input"), { "admin_role_accessesWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, admin_role_id: { nullable: true }, admin_access_id: { nullable: true }, admin_roles: { nullable: true }, admin_accesses: { nullable: true } } }], [import("./@generated/prisma/admin-role-accesses-list-relation-filter.input"), { "Admin_role_accessesListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-where.input"), { "admin_rolesWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, enabled: { nullable: true }, admins: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/prisma/admin-roles-relation-filter.input"), { "Admin_rolesRelationFilter": { is: { nullable: true }, isNot: { nullable: true } } }], [import("./@generated/prisma/admins-relation-filter.input"), { "AdminsRelationFilter": { is: { nullable: true }, isNot: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-where.input"), { "admin_login_logsWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, login_id: { nullable: true }, admin_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true }, admins: { nullable: true } } }], [import("./@generated/prisma/admin-login-logs-list-relation-filter.input"), { "Admin_login_logsListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/prisma/nested-float-filter.input"), { "NestedFloatFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/float-filter.input"), { "FloatFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/nested-string-nullable-filter.input"), { "NestedStringNullableFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/string-nullable-filter.input"), { "StringNullableFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, mode: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/players-list-relation-filter.input"), { "PlayersListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-where.input"), { "agent_rebatesWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, agent_rebate_id: { nullable: true }, agent_id_r: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true }, agents: { nullable: true } } }], [import("./@generated/prisma/agent-rebates-list-relation-filter.input"), { "Agent_rebatesListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/prisma/agents-nullable-relation-filter.input"), { "AgentsNullableRelationFilter": { is: { nullable: true }, isNot: { nullable: true } } }], [import("./@generated/prisma/agents-list-relation-filter.input"), { "AgentsListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/agents/agents-where.input"), { "agentsWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true }, players: { nullable: true }, agent_rebates: { nullable: true }, parent: { nullable: true }, children: { nullable: true } } }], [import("./@generated/prisma/agents-relation-filter.input"), { "AgentsRelationFilter": { is: { nullable: true }, isNot: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-where.input"), { "player_login_logsWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true }, players: { nullable: true } } }], [import("./@generated/prisma/player-login-logs-list-relation-filter.input"), { "Player_login_logsListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-where.input"), { "current_active_playersWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_id_r: { nullable: true }, last_active_time: { nullable: true }, players: { nullable: true } } }], [import("./@generated/prisma/current-active-players-list-relation-filter.input"), { "Current_active_playersListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/prisma/game-history-relation-filter.input"), { "Game_historyRelationFilter": { is: { nullable: true }, isNot: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-where.input"), { "game_rebatesWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, game_rebates_id: { nullable: true }, game_history_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true }, game_history: { nullable: true } } }], [import("./@generated/prisma/game-rebates-list-relation-filter.input"), { "Game_rebatesListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/game-history/game-history-where.input"), { "game_historyWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, game_history_id: { nullable: true }, game_id: { nullable: true }, player_id_r: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true }, players: { nullable: true }, game_rebates: { nullable: true } } }], [import("./@generated/prisma/game-history-list-relation-filter.input"), { "Game_historyListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-where.input"), { "player_walletsWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_wallet_id: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, players: { nullable: true } } }], [import("./@generated/prisma/player-wallets-list-relation-filter.input"), { "Player_walletsListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/prisma/nested-int-filter.input"), { "NestedIntFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/int-filter.input"), { "IntFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-where.input"), { "wallet_requestsWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, wallet_request_id: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true }, players: { nullable: true } } }], [import("./@generated/prisma/wallet-requests-list-relation-filter.input"), { "Wallet_requestsListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/prisma/nested-enum-transaction-type-filter.input"), { "NestedEnumTransactionTypeFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/enum-transaction-type-filter.input"), { "EnumTransactionTypeFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, not: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-where.input"), { "withdrawal_transactionsWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, withdrawal_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true }, players: { nullable: true }, admin_bank_accounts: { nullable: true } } }], [import("./@generated/prisma/withdrawal-transactions-list-relation-filter.input"), { "Withdrawal_transactionsListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-where.input"), { "admin_bank_accountsWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, admin_bank_account_id: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true } } }], [import("./@generated/prisma/admin-bank-accounts-relation-filter.input"), { "Admin_bank_accountsRelationFilter": { is: { nullable: true }, isNot: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-where.input"), { "deposit_transactionsWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, deposit_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true }, players: { nullable: true }, admin_bank_accounts: { nullable: true } } }], [import("./@generated/prisma/deposit-transactions-list-relation-filter.input"), { "Deposit_transactionsListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-where.input"), { "transfer_in_transactionsWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, transfer_in_Transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true }, players: { nullable: true } } }], [import("./@generated/prisma/transfer-in-transactions-list-relation-filter.input"), { "Transfer_in_transactionsListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-where.input"), { "transfer_out_transactionsWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, transfer_out_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true }, players: { nullable: true } } }], [import("./@generated/prisma/transfer-out-transactions-list-relation-filter.input"), { "Transfer_out_transactionsListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/players/players-where.input"), { "playersWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, agent: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/prisma/players-relation-filter.input"), { "PlayersRelationFilter": { is: { nullable: true }, isNot: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-where.input"), { "manual_adjustmentsWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, manual_adjustment_id: { nullable: true }, player_id_r: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, created_by_r: { nullable: true }, cdate: { nullable: true }, players: { nullable: true }, admins: { nullable: true } } }], [import("./@generated/prisma/manual-adjustments-list-relation-filter.input"), { "Manual_adjustmentsListRelationFilter": { every: { nullable: true }, some: { nullable: true }, none: { nullable: true } } }], [import("./@generated/admins/admins-where.input"), { "AdminsWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, admin_role_id: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_roles: { nullable: true }, admin_login_logs: { nullable: true }, manual_adjustments: { nullable: true } } }], [import("./admins/dto/create-role.input"), { "CreateRoleInput": { admin_role_name: {} } }], [import("./admins/dto/update-role.input"), { "UpdateRoleInput": { admin_role_id: {}, admin_role_name: {}, added_roles_ids: {}, remove_roles_ids: {}, enabled: { nullable: true } } }], [import("./agents/dto/create-agent.input"), { "CreateAgentInput": { agent_name: {}, agent_password: {}, parent_agent_id: { nullable: true } } }], [import("./agents/dto/update-agent.input"), { "UpdateAgentInput": { agent_id: {}, agent_password: { nullable: true }, agent_name: { nullable: true }, enabled: { nullable: true } } }], [import("./agents/entities/agent.entity"), { "Agent": { agent_id: {}, agent_name: {}, created_by: {}, cdate: {}, udate: {}, enabled: {}, parent_agent_id: {} } }], [import("./players/dto/update-player.input"), { "UpdatePlayerInput": { user_id: {}, enabled: { nullable: true } } }], [import("./players/dto/create-manual-adjustment.input"), { "CreateManualAdjustment": { reason: {}, amount: {}, cdate: { nullable: true }, player_id: {} } }], [import("./players/entities/player.entity"), { "Player": { player_id: {}, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_username: {}, tg_photo_url: {}, user_language: {}, registrationIp: {}, agent_id: {}, cdate: {}, udate: {}, enabled: {}, registration_date: {}, agent: { nullable: true } } }], [import("./players/entities/loginhistory.entity"), { "UserLoginHistory": { player_id: {}, ip: {}, login_time: {}, players: { nullable: true } } }], [import("./players/entities/manualadjustment.entity"), { "ManualAdjustment": { manual_adjustment_id: {}, player_id: {}, reason: {}, amount: {}, created_by: {}, cdate: {}, players: { nullable: true }, admins: { nullable: true } } }], [import("./finances/dto/create-finance.input"), { "CreateBankAccountInput": { bank_name: {}, account_number: {}, holder_name: {}, enabled: { nullable: true }, method: {} }, "UpdateBankAccountInput": { admin_bank_account_id: { nullable: true }, bank_name: {}, account_number: {}, holder_name: {} } }], [import("./finances/dto/update-finance.input"), { "UpdateFinanceInput": { id: {}, is_enabled: {} } }], [import("./finances/entities/bankaccount.entity"), { "BankAccountEntity": { admin_bank_account_id: {}, bank_name: {}, account_number: {}, holder_name: {}, enabled: {}, method: {}, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true } } }], [import("./finances/entities/finance.entity"), { "DepositEntity": { deposit_transaction_id: {}, player_id: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: {}, admin_bank_account_id: {}, players: { nullable: true }, admin_bank_accounts: { nullable: true } }, "WithdrawalEntity": { withdrawal_transaction_id: {}, player_id: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: {}, admin_bank_account_id: {}, players: { nullable: true }, admin_bank_accounts: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-count-order-by-aggregate.input"), { "admin_accessesCountOrderByAggregateInput": { admin_access_id: { nullable: true }, access_name: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-create-many.input"), { "admin_accessesCreateManyInput": { admin_access_id: { nullable: true }, access_name: {} } }], [import("./@generated/admin-accesses/admin-accesses-create-without-role-accesses.input"), { "admin_accessesCreateWithoutRole_accessesInput": { admin_access_id: { nullable: true }, access_name: {} } }], [import("./@generated/admin-accesses/admin-accesses-where-unique.input"), { "admin_accessesWhereUniqueInput": { admin_access_id: { nullable: true }, access_name: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-create-or-connect-without-role-accesses.input"), { "admin_accessesCreateOrConnectWithoutRole_accessesInput": { where: {}, create: {} } }], [import("./@generated/admin-accesses/admin-accesses-create-nested-one-without-role-accesses.input"), { "admin_accessesCreateNestedOneWithoutRole_accessesInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-create-without-admins.input"), { "admin_login_logsCreateWithoutAdminsInput": { login_id: { nullable: true }, ip: {}, login_time: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-where-unique.input"), { "admin_login_logsWhereUniqueInput": { login_id: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, admin_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true }, admins: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-create-or-connect-without-admins.input"), { "admin_login_logsCreateOrConnectWithoutAdminsInput": { where: {}, create: {} } }], [import("./@generated/admin-login-logs/admin-login-logs-create-many-admins.input"), { "admin_login_logsCreateManyAdminsInput": { login_id: { nullable: true }, ip: {}, login_time: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-create-many-admins-input-envelope.input"), { "admin_login_logsCreateManyAdminsInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-create-nested-many-without-admins.input"), { "admin_login_logsCreateNestedManyWithoutAdminsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-create-without-agents.input"), { "agent_rebatesCreateWithoutAgentsInput": { agent_rebate_id: { nullable: true }, game_id: {}, rebate: {}, created_by: {}, from_date: {}, thru_date: {}, is_active: {} } }], [import("./@generated/agent-rebates/agent-rebates-where-unique.input"), { "agent_rebatesWhereUniqueInput": { agent_rebate_id: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, agent_id_r: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true }, agents: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-create-or-connect-without-agents.input"), { "agent_rebatesCreateOrConnectWithoutAgentsInput": { where: {}, create: {} } }], [import("./@generated/agent-rebates/agent-rebates-create-many-agents.input"), { "agent_rebatesCreateManyAgentsInput": { agent_rebate_id: { nullable: true }, game_id: {}, rebate: {}, created_by: {}, from_date: {}, thru_date: {}, is_active: {} } }], [import("./@generated/agent-rebates/agent-rebates-create-many-agents-input-envelope.input"), { "agent_rebatesCreateManyAgentsInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-create-nested-many-without-agents.input"), { "agent_rebatesCreateNestedManyWithoutAgentsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-create-without-players.input"), { "player_login_logsCreateWithoutPlayersInput": { ip: {}, login_time: {} } }], [import("./@generated/player-login-logs/player-login-logs-where-unique.input"), { "player_login_logsWhereUniqueInput": { player_id_r: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true }, players: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-create-or-connect-without-players.input"), { "player_login_logsCreateOrConnectWithoutPlayersInput": { where: {}, create: {} } }], [import("./@generated/player-login-logs/player-login-logs-create-many-players.input"), { "player_login_logsCreateManyPlayersInput": { ip: {}, login_time: {} } }], [import("./@generated/player-login-logs/player-login-logs-create-many-players-input-envelope.input"), { "player_login_logsCreateManyPlayersInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-create-nested-many-without-players.input"), { "player_login_logsCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-create-without-players.input"), { "current_active_playersCreateWithoutPlayersInput": { last_active_time: {} } }], [import("./@generated/current-active-players/current-active-players-where-unique.input"), { "current_active_playersWhereUniqueInput": { player_id_r: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, last_active_time: { nullable: true }, players: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-create-or-connect-without-players.input"), { "current_active_playersCreateOrConnectWithoutPlayersInput": { where: {}, create: {} } }], [import("./@generated/current-active-players/current-active-players-create-many-players.input"), { "current_active_playersCreateManyPlayersInput": { last_active_time: {} } }], [import("./@generated/current-active-players/current-active-players-create-many-players-input-envelope.input"), { "current_active_playersCreateManyPlayersInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-create-nested-many-without-players.input"), { "current_active_playersCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-create-without-game-history.input"), { "game_rebatesCreateWithoutGame_historyInput": { game_rebates_id: { nullable: true }, merchant_id: {}, game_id: {}, category: {}, effective_bet_amount: {}, rebate_amount: {}, status: {}, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-where-unique.input"), { "game_rebatesWhereUniqueInput": { game_rebates_id: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, game_history_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true }, game_history: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-create-or-connect-without-game-history.input"), { "game_rebatesCreateOrConnectWithoutGame_historyInput": { where: {}, create: {} } }], [import("./@generated/game-rebates/game-rebates-create-many-game-history.input"), { "game_rebatesCreateManyGame_historyInput": { game_rebates_id: { nullable: true }, merchant_id: {}, game_id: {}, category: {}, effective_bet_amount: {}, rebate_amount: {}, status: {}, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-create-many-game-history-input-envelope.input"), { "game_rebatesCreateManyGame_historyInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-create-nested-many-without-game-history.input"), { "game_rebatesCreateNestedManyWithoutGame_historyInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/game-history/game-history-create-without-players.input"), { "game_historyCreateWithoutPlayersInput": { game_history_id: { nullable: true }, game_id: {}, i_gamedesc: {}, bet_amount: {}, win_amount: {}, transaction_date: {}, cdate: { nullable: true }, game_rebates: { nullable: true } } }], [import("./@generated/game-history/game-history-where-unique.input"), { "game_historyWhereUniqueInput": { game_history_id: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, game_id: { nullable: true }, player_id_r: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true }, players: { nullable: true }, game_rebates: { nullable: true } } }], [import("./@generated/game-history/game-history-create-or-connect-without-players.input"), { "game_historyCreateOrConnectWithoutPlayersInput": { where: {}, create: {} } }], [import("./@generated/game-history/game-history-create-many-players.input"), { "game_historyCreateManyPlayersInput": { game_history_id: { nullable: true }, game_id: {}, i_gamedesc: {}, bet_amount: {}, win_amount: {}, transaction_date: {}, cdate: { nullable: true } } }], [import("./@generated/game-history/game-history-create-many-players-input-envelope.input"), { "game_historyCreateManyPlayersInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/game-history/game-history-create-nested-many-without-players.input"), { "game_historyCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-create-without-admin-roles.input"), { "admin_role_accessesCreateWithoutAdmin_rolesInput": { admin_accesses: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-admin-role-id-admin-access-id-compound-unique.input"), { "admin_role_accessesAdmin_role_idAdmin_access_idCompoundUniqueInput": { admin_role_id: {}, admin_access_id: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-where-unique.input"), { "admin_role_accessesWhereUniqueInput": { admin_role_id_admin_access_id: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, admin_role_id: { nullable: true }, admin_access_id: { nullable: true }, admin_roles: { nullable: true }, admin_accesses: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-create-or-connect-without-admin-roles.input"), { "admin_role_accessesCreateOrConnectWithoutAdmin_rolesInput": { where: {}, create: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-create-many-admin-roles.input"), { "admin_role_accessesCreateManyAdmin_rolesInput": { admin_access_id: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-create-many-admin-roles-input-envelope.input"), { "admin_role_accessesCreateManyAdmin_rolesInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-create-nested-many-without-admin-roles.input"), { "admin_role_accessesCreateNestedManyWithoutAdmin_rolesInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-create-without-admins.input"), { "admin_rolesCreateWithoutAdminsInput": { admin_role_id: { nullable: true }, admin_role_name: {}, enabled: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-where-unique.input"), { "admin_rolesWhereUniqueInput": { admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, enabled: { nullable: true }, admins: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-create-or-connect-without-admins.input"), { "admin_rolesCreateOrConnectWithoutAdminsInput": { where: {}, create: {} } }], [import("./@generated/admin-roles/admin-roles-create-nested-one-without-admins.input"), { "admin_rolesCreateNestedOneWithoutAdminsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admins/admins-create-without-manual-adjustments.input"), { "adminsCreateWithoutManual_adjustmentsInput": { admin_id: { nullable: true }, admin_name: {}, admin_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_roles: {}, admin_login_logs: { nullable: true } } }], [import("./@generated/admins/admins-where-unique.input"), { "adminsWhereUniqueInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, admin_password: { nullable: true }, admin_role_id: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_roles: { nullable: true }, admin_login_logs: { nullable: true }, manual_adjustments: { nullable: true } } }], [import("./@generated/admins/admins-create-or-connect-without-manual-adjustments.input"), { "adminsCreateOrConnectWithoutManual_adjustmentsInput": { where: {}, create: {} } }], [import("./@generated/admins/admins-create-nested-one-without-manual-adjustments.input"), { "adminsCreateNestedOneWithoutManual_adjustmentsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-create-without-players.input"), { "manual_adjustmentsCreateWithoutPlayersInput": { manual_adjustment_id: { nullable: true }, reason: {}, amount: {}, cdate: { nullable: true }, admins: {} } }], [import("./@generated/manual-adjustments/manual-adjustments-where-unique.input"), { "manual_adjustmentsWhereUniqueInput": { manual_adjustment_id: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_id_r: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, created_by_r: { nullable: true }, cdate: { nullable: true }, players: { nullable: true }, admins: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-create-or-connect-without-players.input"), { "manual_adjustmentsCreateOrConnectWithoutPlayersInput": { where: {}, create: {} } }], [import("./@generated/manual-adjustments/manual-adjustments-create-many-players.input"), { "manual_adjustmentsCreateManyPlayersInput": { manual_adjustment_id: { nullable: true }, reason: {}, amount: {}, created_by_r: {}, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-create-many-players-input-envelope.input"), { "manual_adjustmentsCreateManyPlayersInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-create-nested-many-without-players.input"), { "manual_adjustmentsCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-create-without-players.input"), { "player_walletsCreateWithoutPlayersInput": { player_wallet_id: { nullable: true }, currency: {}, amount: {}, frozen_amount: {}, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-where-unique.input"), { "player_walletsWhereUniqueInput": { player_wallet_id: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, players: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-create-or-connect-without-players.input"), { "player_walletsCreateOrConnectWithoutPlayersInput": { where: {}, create: {} } }], [import("./@generated/player-wallets/player-wallets-create-many-players.input"), { "player_walletsCreateManyPlayersInput": { player_wallet_id: { nullable: true }, currency: {}, amount: {}, frozen_amount: {}, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-create-many-players-input-envelope.input"), { "player_walletsCreateManyPlayersInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-create-nested-many-without-players.input"), { "player_walletsCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-create-without-players.input"), { "wallet_requestsCreateWithoutPlayersInput": { wallet_request_id: { nullable: true }, t_id: {}, type: {}, currency: {}, amount: {}, i_game_id: {}, i_extparam: {}, i_rollback: {}, i_gamedesc: {}, i_action_id: {}, i_reference_action_id: {}, round_start: {}, round_ended: {}, game_extra: {}, subtype: {}, jackpot_win: {}, hmac: {}, response: {} } }], [import("./@generated/wallet-requests/wallet-requests-where-unique.input"), { "wallet_requestsWhereUniqueInput": { wallet_request_id: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true }, players: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-create-or-connect-without-players.input"), { "wallet_requestsCreateOrConnectWithoutPlayersInput": { where: {}, create: {} } }], [import("./@generated/wallet-requests/wallet-requests-create-many-players.input"), { "wallet_requestsCreateManyPlayersInput": { wallet_request_id: { nullable: true }, t_id: {}, type: {}, currency: {}, amount: {}, i_game_id: {}, i_extparam: {}, i_rollback: {}, i_gamedesc: {}, i_action_id: {}, i_reference_action_id: {}, round_start: {}, round_ended: {}, game_extra: {}, subtype: {}, jackpot_win: {}, hmac: {}, response: {} } }], [import("./@generated/wallet-requests/wallet-requests-create-many-players-input-envelope.input"), { "wallet_requestsCreateManyPlayersInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-create-nested-many-without-players.input"), { "wallet_requestsCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-create-without-players.input"), { "transfer_in_transactionsCreateWithoutPlayersInput": { transfer_in_Transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, counterpart_platform: {}, counterpart_username: {} } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-where-unique.input"), { "transfer_in_transactionsWhereUniqueInput": { transfer_in_Transaction_id: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true }, players: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-create-or-connect-without-players.input"), { "transfer_in_transactionsCreateOrConnectWithoutPlayersInput": { where: {}, create: {} } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-create-many-players.input"), { "transfer_in_transactionsCreateManyPlayersInput": { transfer_in_Transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, counterpart_platform: {}, counterpart_username: {} } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-create-many-players-input-envelope.input"), { "transfer_in_transactionsCreateManyPlayersInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-create-nested-many-without-players.input"), { "transfer_in_transactionsCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-create-without-players.input"), { "transfer_out_transactionsCreateWithoutPlayersInput": { transfer_out_transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, counterpart_platform: {}, counterpart_username: {} } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-where-unique.input"), { "transfer_out_transactionsWhereUniqueInput": { transfer_out_transaction_id: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true }, players: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-create-or-connect-without-players.input"), { "transfer_out_transactionsCreateOrConnectWithoutPlayersInput": { where: {}, create: {} } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-create-many-players.input"), { "transfer_out_transactionsCreateManyPlayersInput": { transfer_out_transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, counterpart_platform: {}, counterpart_username: {} } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-create-many-players-input-envelope.input"), { "transfer_out_transactionsCreateManyPlayersInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-create-nested-many-without-players.input"), { "transfer_out_transactionsCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/players/players-where-unique.input"), { "playersWhereUniqueInput": { player_id: { nullable: true }, tg_id: { nullable: true }, tg_user_name: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, name: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, agent: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-create-without-admin-bank-accounts.input"), { "withdrawal_transactionsCreateWithoutAdmin_bank_accountsInput": { withdrawal_transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, players: {} } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-where-unique.input"), { "withdrawal_transactionsWhereUniqueInput": { withdrawal_transaction_id: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true }, players: { nullable: true }, admin_bank_accounts: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-create-or-connect-without-admin-bank-accounts.input"), { "withdrawal_transactionsCreateOrConnectWithoutAdmin_bank_accountsInput": { where: {}, create: {} } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-create-many-admin-bank-accounts.input"), { "withdrawal_transactionsCreateManyAdmin_bank_accountsInput": { withdrawal_transaction_id: { nullable: true }, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-create-many-admin-bank-accounts-input-envelope.input"), { "withdrawal_transactionsCreateManyAdmin_bank_accountsInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-create-nested-many-without-admin-bank-accounts.input"), { "withdrawal_transactionsCreateNestedManyWithoutAdmin_bank_accountsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-create-without-deposit-transactions.input"), { "admin_bank_accountsCreateWithoutDeposit_transactionsInput": { admin_bank_account_id: { nullable: true }, bank_name: {}, account_number: {}, holder_name: {}, enabled: { nullable: true }, method: {}, withdrawal_transactions: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-where-unique.input"), { "admin_bank_accountsWhereUniqueInput": { admin_bank_account_id: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-create-or-connect-without-deposit-transactions.input"), { "admin_bank_accountsCreateOrConnectWithoutDeposit_transactionsInput": { where: {}, create: {} } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-create-nested-one-without-deposit-transactions.input"), { "admin_bank_accountsCreateNestedOneWithoutDeposit_transactionsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-create-without-players.input"), { "deposit_transactionsCreateWithoutPlayersInput": { deposit_transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, admin_bank_accounts: {} } }], [import("./@generated/deposit-transactions/deposit-transactions-where-unique.input"), { "deposit_transactionsWhereUniqueInput": { deposit_transaction_id: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true }, players: { nullable: true }, admin_bank_accounts: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-create-or-connect-without-players.input"), { "deposit_transactionsCreateOrConnectWithoutPlayersInput": { where: {}, create: {} } }], [import("./@generated/deposit-transactions/deposit-transactions-create-many-players.input"), { "deposit_transactionsCreateManyPlayersInput": { deposit_transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, admin_bank_account_id_r: {} } }], [import("./@generated/deposit-transactions/deposit-transactions-create-many-players-input-envelope.input"), { "deposit_transactionsCreateManyPlayersInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-create-nested-many-without-players.input"), { "deposit_transactionsCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/players/players-create-without-deposit-transactions.input"), { "playersCreateWithoutDeposit_transactionsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, agent: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-create-or-connect-without-deposit-transactions.input"), { "playersCreateOrConnectWithoutDeposit_transactionsInput": { where: {}, create: {} } }], [import("./@generated/players/players-create-nested-one-without-deposit-transactions.input"), { "playersCreateNestedOneWithoutDeposit_transactionsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-create-without-admin-bank-accounts.input"), { "deposit_transactionsCreateWithoutAdmin_bank_accountsInput": { deposit_transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, players: {} } }], [import("./@generated/deposit-transactions/deposit-transactions-create-or-connect-without-admin-bank-accounts.input"), { "deposit_transactionsCreateOrConnectWithoutAdmin_bank_accountsInput": { where: {}, create: {} } }], [import("./@generated/deposit-transactions/deposit-transactions-create-many-admin-bank-accounts.input"), { "deposit_transactionsCreateManyAdmin_bank_accountsInput": { deposit_transaction_id: { nullable: true }, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-create-many-admin-bank-accounts-input-envelope.input"), { "deposit_transactionsCreateManyAdmin_bank_accountsInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-create-nested-many-without-admin-bank-accounts.input"), { "deposit_transactionsCreateNestedManyWithoutAdmin_bank_accountsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-create-without-withdrawal-transactions.input"), { "admin_bank_accountsCreateWithoutWithdrawal_transactionsInput": { admin_bank_account_id: { nullable: true }, bank_name: {}, account_number: {}, holder_name: {}, enabled: { nullable: true }, method: {}, deposit_transactions: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-create-or-connect-without-withdrawal-transactions.input"), { "admin_bank_accountsCreateOrConnectWithoutWithdrawal_transactionsInput": { where: {}, create: {} } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-create-nested-one-without-withdrawal-transactions.input"), { "admin_bank_accountsCreateNestedOneWithoutWithdrawal_transactionsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-create-without-players.input"), { "withdrawal_transactionsCreateWithoutPlayersInput": { withdrawal_transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, admin_bank_accounts: {} } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-create-or-connect-without-players.input"), { "withdrawal_transactionsCreateOrConnectWithoutPlayersInput": { where: {}, create: {} } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-create-many-players.input"), { "withdrawal_transactionsCreateManyPlayersInput": { withdrawal_transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, admin_bank_account_id_r: {} } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-create-many-players-input-envelope.input"), { "withdrawal_transactionsCreateManyPlayersInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-create-nested-many-without-players.input"), { "withdrawal_transactionsCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/players/players-create-without-agent.input"), { "playersCreateWithoutAgentInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-create-or-connect-without-agent.input"), { "playersCreateOrConnectWithoutAgentInput": { where: {}, create: {} } }], [import("./@generated/players/players-create-many-agent.input"), { "playersCreateManyAgentInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {} } }], [import("./@generated/players/players-create-many-agent-input-envelope.input"), { "playersCreateManyAgentInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/players/players-create-nested-many-without-agent.input"), { "playersCreateNestedManyWithoutAgentInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/agents/agents-create-without-children.input"), { "agentsCreateWithoutChildrenInput": { agent_id: { nullable: true }, agent_name: {}, agent_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, players: { nullable: true }, agent_rebates: { nullable: true }, parent: { nullable: true } } }], [import("./@generated/agents/agents-where-unique.input"), { "agentsWhereUniqueInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true }, players: { nullable: true }, agent_rebates: { nullable: true }, parent: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-create-or-connect-without-children.input"), { "agentsCreateOrConnectWithoutChildrenInput": { where: {}, create: {} } }], [import("./@generated/agents/agents-create-nested-one-without-children.input"), { "agentsCreateNestedOneWithoutChildrenInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/agents/agents-create-without-parent.input"), { "agentsCreateWithoutParentInput": { agent_id: { nullable: true }, agent_name: {}, agent_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, players: { nullable: true }, agent_rebates: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-create-or-connect-without-parent.input"), { "agentsCreateOrConnectWithoutParentInput": { where: {}, create: {} } }], [import("./@generated/agents/agents-create-many-parent.input"), { "agentsCreateManyParentInput": { agent_id: { nullable: true }, agent_name: {}, agent_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/agents/agents-create-many-parent-input-envelope.input"), { "agentsCreateManyParentInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/agents/agents-create-nested-many-without-parent.input"), { "agentsCreateNestedManyWithoutParentInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/agents/agents-create-without-players.input"), { "agentsCreateWithoutPlayersInput": { agent_id: { nullable: true }, agent_name: {}, agent_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, agent_rebates: { nullable: true }, parent: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-create-or-connect-without-players.input"), { "agentsCreateOrConnectWithoutPlayersInput": { where: {}, create: {} } }], [import("./@generated/agents/agents-create-nested-one-without-players.input"), { "agentsCreateNestedOneWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/players/players-create-without-withdrawal-transactions.input"), { "playersCreateWithoutWithdrawal_transactionsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, agent: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-create-or-connect-without-withdrawal-transactions.input"), { "playersCreateOrConnectWithoutWithdrawal_transactionsInput": { where: {}, create: {} } }], [import("./@generated/players/players-create-nested-one-without-withdrawal-transactions.input"), { "playersCreateNestedOneWithoutWithdrawal_transactionsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/players/players-create-without-manual-adjustments.input"), { "playersCreateWithoutManual_adjustmentsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, agent: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-create-or-connect-without-manual-adjustments.input"), { "playersCreateOrConnectWithoutManual_adjustmentsInput": { where: {}, create: {} } }], [import("./@generated/players/players-create-nested-one-without-manual-adjustments.input"), { "playersCreateNestedOneWithoutManual_adjustmentsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-create-without-admins.input"), { "manual_adjustmentsCreateWithoutAdminsInput": { manual_adjustment_id: { nullable: true }, reason: {}, amount: {}, cdate: { nullable: true }, players: {} } }], [import("./@generated/manual-adjustments/manual-adjustments-create-or-connect-without-admins.input"), { "manual_adjustmentsCreateOrConnectWithoutAdminsInput": { where: {}, create: {} } }], [import("./@generated/manual-adjustments/manual-adjustments-create-many-admins.input"), { "manual_adjustmentsCreateManyAdminsInput": { manual_adjustment_id: { nullable: true }, player_id_r: {}, reason: {}, amount: {}, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-create-many-admins-input-envelope.input"), { "manual_adjustmentsCreateManyAdminsInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-create-nested-many-without-admins.input"), { "manual_adjustmentsCreateNestedManyWithoutAdminsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admins/admins-create-without-admin-roles.input"), { "adminsCreateWithoutAdmin_rolesInput": { admin_id: { nullable: true }, admin_name: {}, admin_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_login_logs: { nullable: true }, manual_adjustments: { nullable: true } } }], [import("./@generated/admins/admins-create-or-connect-without-admin-roles.input"), { "adminsCreateOrConnectWithoutAdmin_rolesInput": { where: {}, create: {} } }], [import("./@generated/admins/admins-create-many-admin-roles.input"), { "adminsCreateManyAdmin_rolesInput": { admin_id: { nullable: true }, admin_name: {}, admin_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/admins/admins-create-many-admin-roles-input-envelope.input"), { "adminsCreateManyAdmin_rolesInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/admins/admins-create-nested-many-without-admin-roles.input"), { "adminsCreateNestedManyWithoutAdmin_rolesInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-create-without-role-accesses.input"), { "admin_rolesCreateWithoutRole_accessesInput": { admin_role_id: { nullable: true }, admin_role_name: {}, enabled: { nullable: true }, admins: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-create-or-connect-without-role-accesses.input"), { "admin_rolesCreateOrConnectWithoutRole_accessesInput": { where: {}, create: {} } }], [import("./@generated/admin-roles/admin-roles-create-nested-one-without-role-accesses.input"), { "admin_rolesCreateNestedOneWithoutRole_accessesInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-create-without-admin-accesses.input"), { "admin_role_accessesCreateWithoutAdmin_accessesInput": { admin_roles: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-create-or-connect-without-admin-accesses.input"), { "admin_role_accessesCreateOrConnectWithoutAdmin_accessesInput": { where: {}, create: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-create-many-admin-accesses.input"), { "admin_role_accessesCreateManyAdmin_accessesInput": { admin_role_id: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-create-many-admin-accesses-input-envelope.input"), { "admin_role_accessesCreateManyAdmin_accessesInputEnvelope": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-create-nested-many-without-admin-accesses.input"), { "admin_role_accessesCreateNestedManyWithoutAdmin_accessesInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-create.input"), { "admin_accessesCreateInput": { admin_access_id: { nullable: true }, access_name: {}, role_accesses: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-max-order-by-aggregate.input"), { "admin_accessesMaxOrderByAggregateInput": { admin_access_id: { nullable: true }, access_name: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-min-order-by-aggregate.input"), { "admin_accessesMinOrderByAggregateInput": { admin_access_id: { nullable: true }, access_name: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-order-by-with-aggregation.input"), { "admin_accessesOrderByWithAggregationInput": { admin_access_id: { nullable: true }, access_name: { nullable: true }, _count: { nullable: true }, _max: { nullable: true }, _min: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-order-by-relation-aggregate.input"), { "admin_role_accessesOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-order-by-with-relation.input"), { "admin_accessesOrderByWithRelationInput": { admin_access_id: { nullable: true }, access_name: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/prisma/nested-string-with-aggregates-filter.input"), { "NestedStringWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/string-with-aggregates-filter.input"), { "StringWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, mode: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-scalar-where-with-aggregates.input"), { "admin_accessesScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, admin_access_id: { nullable: true }, access_name: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-unchecked-create-without-role-accesses.input"), { "admin_accessesUncheckedCreateWithoutRole_accessesInput": { admin_access_id: { nullable: true }, access_name: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-unchecked-create-nested-many-without-admin-accesses.input"), { "admin_role_accessesUncheckedCreateNestedManyWithoutAdmin_accessesInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-unchecked-create.input"), { "admin_accessesUncheckedCreateInput": { admin_access_id: { nullable: true }, access_name: {}, role_accesses: { nullable: true } } }], [import("./@generated/prisma/string-field-update-operations.input"), { "StringFieldUpdateOperationsInput": { set: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-unchecked-update-many.input"), { "admin_accessesUncheckedUpdateManyInput": { admin_access_id: { nullable: true }, access_name: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-unchecked-update-without-role-accesses.input"), { "admin_accessesUncheckedUpdateWithoutRole_accessesInput": { admin_access_id: { nullable: true }, access_name: { nullable: true } } }], [import("./@generated/prisma/bool-field-update-operations.input"), { "BoolFieldUpdateOperationsInput": { set: { nullable: true } } }], [import("./@generated/prisma/date-time-field-update-operations.input"), { "DateTimeFieldUpdateOperationsInput": { set: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-update-without-admins.input"), { "admin_login_logsUpdateWithoutAdminsInput": { login_id: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-upsert-with-where-unique-without-admins.input"), { "admin_login_logsUpsertWithWhereUniqueWithoutAdminsInput": { where: {}, update: {}, create: {} } }], [import("./@generated/admin-login-logs/admin-login-logs-update-with-where-unique-without-admins.input"), { "admin_login_logsUpdateWithWhereUniqueWithoutAdminsInput": { where: {}, data: {} } }], [import("./@generated/admin-login-logs/admin-login-logs-scalar-where.input"), { "admin_login_logsScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, login_id: { nullable: true }, admin_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-update-many-mutation.input"), { "admin_login_logsUpdateManyMutationInput": { login_id: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-update-many-with-where-without-admins.input"), { "admin_login_logsUpdateManyWithWhereWithoutAdminsInput": { where: {}, data: {} } }], [import("./@generated/admin-login-logs/admin-login-logs-update-many-without-admins-nested.input"), { "admin_login_logsUpdateManyWithoutAdminsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/prisma/float-field-update-operations.input"), { "FloatFieldUpdateOperationsInput": { set: { nullable: true }, increment: { nullable: true }, decrement: { nullable: true }, multiply: { nullable: true }, divide: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-update-without-agents.input"), { "agent_rebatesUpdateWithoutAgentsInput": { agent_rebate_id: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-upsert-with-where-unique-without-agents.input"), { "agent_rebatesUpsertWithWhereUniqueWithoutAgentsInput": { where: {}, update: {}, create: {} } }], [import("./@generated/agent-rebates/agent-rebates-update-with-where-unique-without-agents.input"), { "agent_rebatesUpdateWithWhereUniqueWithoutAgentsInput": { where: {}, data: {} } }], [import("./@generated/agent-rebates/agent-rebates-scalar-where.input"), { "agent_rebatesScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, agent_rebate_id: { nullable: true }, agent_id_r: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-update-many-mutation.input"), { "agent_rebatesUpdateManyMutationInput": { agent_rebate_id: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-update-many-with-where-without-agents.input"), { "agent_rebatesUpdateManyWithWhereWithoutAgentsInput": { where: {}, data: {} } }], [import("./@generated/agent-rebates/agent-rebates-update-many-without-agents-nested.input"), { "agent_rebatesUpdateManyWithoutAgentsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-update-without-players.input"), { "player_login_logsUpdateWithoutPlayersInput": { ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-upsert-with-where-unique-without-players.input"), { "player_login_logsUpsertWithWhereUniqueWithoutPlayersInput": { where: {}, update: {}, create: {} } }], [import("./@generated/player-login-logs/player-login-logs-update-with-where-unique-without-players.input"), { "player_login_logsUpdateWithWhereUniqueWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/player-login-logs/player-login-logs-scalar-where.input"), { "player_login_logsScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-update-many-mutation.input"), { "player_login_logsUpdateManyMutationInput": { ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-update-many-with-where-without-players.input"), { "player_login_logsUpdateManyWithWhereWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/player-login-logs/player-login-logs-update-many-without-players-nested.input"), { "player_login_logsUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-update-without-players.input"), { "current_active_playersUpdateWithoutPlayersInput": { last_active_time: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-upsert-with-where-unique-without-players.input"), { "current_active_playersUpsertWithWhereUniqueWithoutPlayersInput": { where: {}, update: {}, create: {} } }], [import("./@generated/current-active-players/current-active-players-update-with-where-unique-without-players.input"), { "current_active_playersUpdateWithWhereUniqueWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/current-active-players/current-active-players-scalar-where.input"), { "current_active_playersScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_id_r: { nullable: true }, last_active_time: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-update-many-mutation.input"), { "current_active_playersUpdateManyMutationInput": { last_active_time: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-update-many-with-where-without-players.input"), { "current_active_playersUpdateManyWithWhereWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/current-active-players/current-active-players-update-many-without-players-nested.input"), { "current_active_playersUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-update-without-game-history.input"), { "game_rebatesUpdateWithoutGame_historyInput": { game_rebates_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-upsert-with-where-unique-without-game-history.input"), { "game_rebatesUpsertWithWhereUniqueWithoutGame_historyInput": { where: {}, update: {}, create: {} } }], [import("./@generated/game-rebates/game-rebates-update-with-where-unique-without-game-history.input"), { "game_rebatesUpdateWithWhereUniqueWithoutGame_historyInput": { where: {}, data: {} } }], [import("./@generated/game-rebates/game-rebates-scalar-where.input"), { "game_rebatesScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, game_rebates_id: { nullable: true }, game_history_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-update-many-mutation.input"), { "game_rebatesUpdateManyMutationInput": { game_rebates_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-update-many-with-where-without-game-history.input"), { "game_rebatesUpdateManyWithWhereWithoutGame_historyInput": { where: {}, data: {} } }], [import("./@generated/game-rebates/game-rebates-update-many-without-game-history-nested.input"), { "game_rebatesUpdateManyWithoutGame_historyNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/game-history/game-history-update-without-players.input"), { "game_historyUpdateWithoutPlayersInput": { game_history_id: { nullable: true }, game_id: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true }, game_rebates: { nullable: true } } }], [import("./@generated/game-history/game-history-upsert-with-where-unique-without-players.input"), { "game_historyUpsertWithWhereUniqueWithoutPlayersInput": { where: {}, update: {}, create: {} } }], [import("./@generated/game-history/game-history-update-with-where-unique-without-players.input"), { "game_historyUpdateWithWhereUniqueWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/game-history/game-history-scalar-where.input"), { "game_historyScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, game_history_id: { nullable: true }, game_id: { nullable: true }, player_id_r: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-history/game-history-update-many-mutation.input"), { "game_historyUpdateManyMutationInput": { game_history_id: { nullable: true }, game_id: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-history/game-history-update-many-with-where-without-players.input"), { "game_historyUpdateManyWithWhereWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/game-history/game-history-update-many-without-players-nested.input"), { "game_historyUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-update-without-role-accesses.input"), { "admin_accessesUpdateWithoutRole_accessesInput": { admin_access_id: { nullable: true }, access_name: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-upsert-without-role-accesses.input"), { "admin_accessesUpsertWithoutRole_accessesInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-update-to-one-with-where-without-role-accesses.input"), { "admin_accessesUpdateToOneWithWhereWithoutRole_accessesInput": { where: { nullable: true }, data: {} } }], [import("./@generated/admin-accesses/admin-accesses-update-one-required-without-role-accesses-nested.input"), { "admin_accessesUpdateOneRequiredWithoutRole_accessesNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-update-without-admin-roles.input"), { "admin_role_accessesUpdateWithoutAdmin_rolesInput": { admin_accesses: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-upsert-with-where-unique-without-admin-roles.input"), { "admin_role_accessesUpsertWithWhereUniqueWithoutAdmin_rolesInput": { where: {}, update: {}, create: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-update-with-where-unique-without-admin-roles.input"), { "admin_role_accessesUpdateWithWhereUniqueWithoutAdmin_rolesInput": { where: {}, data: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-scalar-where.input"), { "admin_role_accessesScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, admin_role_id: { nullable: true }, admin_access_id: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-unchecked-update-many-without-admin-roles.input"), { "admin_role_accessesUncheckedUpdateManyWithoutAdmin_rolesInput": { admin_access_id: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-update-many-with-where-without-admin-roles.input"), { "admin_role_accessesUpdateManyWithWhereWithoutAdmin_rolesInput": { where: {}, data: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-update-many-without-admin-roles-nested.input"), { "admin_role_accessesUpdateManyWithoutAdmin_rolesNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-update-without-admins.input"), { "admin_rolesUpdateWithoutAdminsInput": { admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, enabled: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-upsert-without-admins.input"), { "admin_rolesUpsertWithoutAdminsInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-update-to-one-with-where-without-admins.input"), { "admin_rolesUpdateToOneWithWhereWithoutAdminsInput": { where: { nullable: true }, data: {} } }], [import("./@generated/admin-roles/admin-roles-update-one-required-without-admins-nested.input"), { "admin_rolesUpdateOneRequiredWithoutAdminsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/admins/admins-update-without-manual-adjustments.input"), { "adminsUpdateWithoutManual_adjustmentsInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_roles: { nullable: true }, admin_login_logs: { nullable: true } } }], [import("./@generated/admins/admins-upsert-without-manual-adjustments.input"), { "adminsUpsertWithoutManual_adjustmentsInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/admins/admins-update-to-one-with-where-without-manual-adjustments.input"), { "adminsUpdateToOneWithWhereWithoutManual_adjustmentsInput": { where: { nullable: true }, data: {} } }], [import("./@generated/admins/admins-update-one-required-without-manual-adjustments-nested.input"), { "adminsUpdateOneRequiredWithoutManual_adjustmentsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-update-without-players.input"), { "manual_adjustmentsUpdateWithoutPlayersInput": { manual_adjustment_id: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, cdate: { nullable: true }, admins: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-upsert-with-where-unique-without-players.input"), { "manual_adjustmentsUpsertWithWhereUniqueWithoutPlayersInput": { where: {}, update: {}, create: {} } }], [import("./@generated/manual-adjustments/manual-adjustments-update-with-where-unique-without-players.input"), { "manual_adjustmentsUpdateWithWhereUniqueWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/manual-adjustments/manual-adjustments-scalar-where.input"), { "manual_adjustmentsScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, manual_adjustment_id: { nullable: true }, player_id_r: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, created_by_r: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-update-many-mutation.input"), { "manual_adjustmentsUpdateManyMutationInput": { manual_adjustment_id: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-update-many-with-where-without-players.input"), { "manual_adjustmentsUpdateManyWithWhereWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/manual-adjustments/manual-adjustments-update-many-without-players-nested.input"), { "manual_adjustmentsUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-update-without-players.input"), { "player_walletsUpdateWithoutPlayersInput": { player_wallet_id: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-upsert-with-where-unique-without-players.input"), { "player_walletsUpsertWithWhereUniqueWithoutPlayersInput": { where: {}, update: {}, create: {} } }], [import("./@generated/player-wallets/player-wallets-update-with-where-unique-without-players.input"), { "player_walletsUpdateWithWhereUniqueWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/player-wallets/player-wallets-scalar-where.input"), { "player_walletsScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_wallet_id: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-update-many-mutation.input"), { "player_walletsUpdateManyMutationInput": { player_wallet_id: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-update-many-with-where-without-players.input"), { "player_walletsUpdateManyWithWhereWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/player-wallets/player-wallets-update-many-without-players-nested.input"), { "player_walletsUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/prisma/int-field-update-operations.input"), { "IntFieldUpdateOperationsInput": { set: { nullable: true }, increment: { nullable: true }, decrement: { nullable: true }, multiply: { nullable: true }, divide: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-update-without-players.input"), { "wallet_requestsUpdateWithoutPlayersInput": { wallet_request_id: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-upsert-with-where-unique-without-players.input"), { "wallet_requestsUpsertWithWhereUniqueWithoutPlayersInput": { where: {}, update: {}, create: {} } }], [import("./@generated/wallet-requests/wallet-requests-update-with-where-unique-without-players.input"), { "wallet_requestsUpdateWithWhereUniqueWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/wallet-requests/wallet-requests-scalar-where.input"), { "wallet_requestsScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, wallet_request_id: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-update-many-mutation.input"), { "wallet_requestsUpdateManyMutationInput": { wallet_request_id: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-update-many-with-where-without-players.input"), { "wallet_requestsUpdateManyWithWhereWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/wallet-requests/wallet-requests-update-many-without-players-nested.input"), { "wallet_requestsUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/prisma/enum-transaction-type-field-update-operations.input"), { "EnumTransactionTypeFieldUpdateOperationsInput": { set: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-update-without-players.input"), { "transfer_in_transactionsUpdateWithoutPlayersInput": { transfer_in_Transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-upsert-with-where-unique-without-players.input"), { "transfer_in_transactionsUpsertWithWhereUniqueWithoutPlayersInput": { where: {}, update: {}, create: {} } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-update-with-where-unique-without-players.input"), { "transfer_in_transactionsUpdateWithWhereUniqueWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-scalar-where.input"), { "transfer_in_transactionsScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, transfer_in_Transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-update-many-mutation.input"), { "transfer_in_transactionsUpdateManyMutationInput": { transfer_in_Transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-update-many-with-where-without-players.input"), { "transfer_in_transactionsUpdateManyWithWhereWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-update-many-without-players-nested.input"), { "transfer_in_transactionsUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-update-without-players.input"), { "transfer_out_transactionsUpdateWithoutPlayersInput": { transfer_out_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-upsert-with-where-unique-without-players.input"), { "transfer_out_transactionsUpsertWithWhereUniqueWithoutPlayersInput": { where: {}, update: {}, create: {} } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-update-with-where-unique-without-players.input"), { "transfer_out_transactionsUpdateWithWhereUniqueWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-scalar-where.input"), { "transfer_out_transactionsScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, transfer_out_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-update-many-mutation.input"), { "transfer_out_transactionsUpdateManyMutationInput": { transfer_out_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-update-many-with-where-without-players.input"), { "transfer_out_transactionsUpdateManyWithWhereWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-update-many-without-players-nested.input"), { "transfer_out_transactionsUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/players/players-upsert-without-withdrawal-transactions.input"), { "playersUpsertWithoutWithdrawal_transactionsInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/players/players-update-one-required-without-withdrawal-transactions-nested.input"), { "playersUpdateOneRequiredWithoutWithdrawal_transactionsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-update-without-admin-bank-accounts.input"), { "withdrawal_transactionsUpdateWithoutAdmin_bank_accountsInput": { withdrawal_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, players: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-upsert-with-where-unique-without-admin-bank-accounts.input"), { "withdrawal_transactionsUpsertWithWhereUniqueWithoutAdmin_bank_accountsInput": { where: {}, update: {}, create: {} } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-update-with-where-unique-without-admin-bank-accounts.input"), { "withdrawal_transactionsUpdateWithWhereUniqueWithoutAdmin_bank_accountsInput": { where: {}, data: {} } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-scalar-where.input"), { "withdrawal_transactionsScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, withdrawal_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-update-many-mutation.input"), { "withdrawal_transactionsUpdateManyMutationInput": { withdrawal_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-update-many-with-where-without-admin-bank-accounts.input"), { "withdrawal_transactionsUpdateManyWithWhereWithoutAdmin_bank_accountsInput": { where: {}, data: {} } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-update-many-without-admin-bank-accounts-nested.input"), { "withdrawal_transactionsUpdateManyWithoutAdmin_bank_accountsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-update-without-deposit-transactions.input"), { "admin_bank_accountsUpdateWithoutDeposit_transactionsInput": { admin_bank_account_id: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true }, withdrawal_transactions: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-upsert-without-deposit-transactions.input"), { "admin_bank_accountsUpsertWithoutDeposit_transactionsInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-update-to-one-with-where-without-deposit-transactions.input"), { "admin_bank_accountsUpdateToOneWithWhereWithoutDeposit_transactionsInput": { where: { nullable: true }, data: {} } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-update-one-required-without-deposit-transactions-nested.input"), { "admin_bank_accountsUpdateOneRequiredWithoutDeposit_transactionsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-update-without-players.input"), { "deposit_transactionsUpdateWithoutPlayersInput": { deposit_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_accounts: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-upsert-with-where-unique-without-players.input"), { "deposit_transactionsUpsertWithWhereUniqueWithoutPlayersInput": { where: {}, update: {}, create: {} } }], [import("./@generated/deposit-transactions/deposit-transactions-update-with-where-unique-without-players.input"), { "deposit_transactionsUpdateWithWhereUniqueWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/deposit-transactions/deposit-transactions-scalar-where.input"), { "deposit_transactionsScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, deposit_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-update-many-mutation.input"), { "deposit_transactionsUpdateManyMutationInput": { deposit_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-update-many-with-where-without-players.input"), { "deposit_transactionsUpdateManyWithWhereWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/deposit-transactions/deposit-transactions-update-many-without-players-nested.input"), { "deposit_transactionsUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/players/players-update-without-deposit-transactions.input"), { "playersUpdateWithoutDeposit_transactionsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, agent: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-upsert-without-deposit-transactions.input"), { "playersUpsertWithoutDeposit_transactionsInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/players/players-update-to-one-with-where-without-deposit-transactions.input"), { "playersUpdateToOneWithWhereWithoutDeposit_transactionsInput": { where: { nullable: true }, data: {} } }], [import("./@generated/players/players-update-one-required-without-deposit-transactions-nested.input"), { "playersUpdateOneRequiredWithoutDeposit_transactionsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-update-without-admin-bank-accounts.input"), { "deposit_transactionsUpdateWithoutAdmin_bank_accountsInput": { deposit_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, players: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-upsert-with-where-unique-without-admin-bank-accounts.input"), { "deposit_transactionsUpsertWithWhereUniqueWithoutAdmin_bank_accountsInput": { where: {}, update: {}, create: {} } }], [import("./@generated/deposit-transactions/deposit-transactions-update-with-where-unique-without-admin-bank-accounts.input"), { "deposit_transactionsUpdateWithWhereUniqueWithoutAdmin_bank_accountsInput": { where: {}, data: {} } }], [import("./@generated/deposit-transactions/deposit-transactions-update-many-with-where-without-admin-bank-accounts.input"), { "deposit_transactionsUpdateManyWithWhereWithoutAdmin_bank_accountsInput": { where: {}, data: {} } }], [import("./@generated/deposit-transactions/deposit-transactions-update-many-without-admin-bank-accounts-nested.input"), { "deposit_transactionsUpdateManyWithoutAdmin_bank_accountsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-update-without-withdrawal-transactions.input"), { "admin_bank_accountsUpdateWithoutWithdrawal_transactionsInput": { admin_bank_account_id: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true }, deposit_transactions: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-upsert-without-withdrawal-transactions.input"), { "admin_bank_accountsUpsertWithoutWithdrawal_transactionsInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-update-to-one-with-where-without-withdrawal-transactions.input"), { "admin_bank_accountsUpdateToOneWithWhereWithoutWithdrawal_transactionsInput": { where: { nullable: true }, data: {} } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-update-one-required-without-withdrawal-transactions-nested.input"), { "admin_bank_accountsUpdateOneRequiredWithoutWithdrawal_transactionsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-update-without-players.input"), { "withdrawal_transactionsUpdateWithoutPlayersInput": { withdrawal_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_accounts: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-upsert-with-where-unique-without-players.input"), { "withdrawal_transactionsUpsertWithWhereUniqueWithoutPlayersInput": { where: {}, update: {}, create: {} } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-update-with-where-unique-without-players.input"), { "withdrawal_transactionsUpdateWithWhereUniqueWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-update-many-with-where-without-players.input"), { "withdrawal_transactionsUpdateManyWithWhereWithoutPlayersInput": { where: {}, data: {} } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-update-many-without-players-nested.input"), { "withdrawal_transactionsUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/players/players-update-without-agent.input"), { "playersUpdateWithoutAgentInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-upsert-with-where-unique-without-agent.input"), { "playersUpsertWithWhereUniqueWithoutAgentInput": { where: {}, update: {}, create: {} } }], [import("./@generated/players/players-update-with-where-unique-without-agent.input"), { "playersUpdateWithWhereUniqueWithoutAgentInput": { where: {}, data: {} } }], [import("./@generated/players/players-scalar-where.input"), { "playersScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true } } }], [import("./@generated/players/players-update-many-mutation.input"), { "playersUpdateManyMutationInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true } } }], [import("./@generated/players/players-update-many-with-where-without-agent.input"), { "playersUpdateManyWithWhereWithoutAgentInput": { where: {}, data: {} } }], [import("./@generated/players/players-update-many-without-agent-nested.input"), { "playersUpdateManyWithoutAgentNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/agents/agents-update-without-children.input"), { "agentsUpdateWithoutChildrenInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, players: { nullable: true }, agent_rebates: { nullable: true }, parent: { nullable: true } } }], [import("./@generated/agents/agents-upsert-without-children.input"), { "agentsUpsertWithoutChildrenInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/agents/agents-update-to-one-with-where-without-children.input"), { "agentsUpdateToOneWithWhereWithoutChildrenInput": { where: { nullable: true }, data: {} } }], [import("./@generated/agents/agents-update-one-without-children-nested.input"), { "agentsUpdateOneWithoutChildrenNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/agents/agents-update-without-parent.input"), { "agentsUpdateWithoutParentInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, players: { nullable: true }, agent_rebates: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-upsert-with-where-unique-without-parent.input"), { "agentsUpsertWithWhereUniqueWithoutParentInput": { where: {}, update: {}, create: {} } }], [import("./@generated/agents/agents-update-with-where-unique-without-parent.input"), { "agentsUpdateWithWhereUniqueWithoutParentInput": { where: {}, data: {} } }], [import("./@generated/agents/agents-scalar-where.input"), { "agentsScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true } } }], [import("./@generated/agents/agents-update-many-mutation.input"), { "agentsUpdateManyMutationInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/agents/agents-update-many-with-where-without-parent.input"), { "agentsUpdateManyWithWhereWithoutParentInput": { where: {}, data: {} } }], [import("./@generated/agents/agents-update-many-without-parent-nested.input"), { "agentsUpdateManyWithoutParentNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/agents/agents-update-without-players.input"), { "agentsUpdateWithoutPlayersInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, agent_rebates: { nullable: true }, parent: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-upsert-without-players.input"), { "agentsUpsertWithoutPlayersInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/agents/agents-update-to-one-with-where-without-players.input"), { "agentsUpdateToOneWithWhereWithoutPlayersInput": { where: { nullable: true }, data: {} } }], [import("./@generated/agents/agents-update-one-required-without-players-nested.input"), { "agentsUpdateOneRequiredWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/players/players-update-without-withdrawal-transactions.input"), { "playersUpdateWithoutWithdrawal_transactionsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, agent: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-update-to-one-with-where-without-withdrawal-transactions.input"), { "playersUpdateToOneWithWhereWithoutWithdrawal_transactionsInput": { where: { nullable: true }, data: {} } }], [import("./@generated/players/players-update-without-manual-adjustments.input"), { "playersUpdateWithoutManual_adjustmentsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, agent: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-upsert-without-manual-adjustments.input"), { "playersUpsertWithoutManual_adjustmentsInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/players/players-update-to-one-with-where-without-manual-adjustments.input"), { "playersUpdateToOneWithWhereWithoutManual_adjustmentsInput": { where: { nullable: true }, data: {} } }], [import("./@generated/players/players-update-one-required-without-manual-adjustments-nested.input"), { "playersUpdateOneRequiredWithoutManual_adjustmentsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-update-without-admins.input"), { "manual_adjustmentsUpdateWithoutAdminsInput": { manual_adjustment_id: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, cdate: { nullable: true }, players: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-upsert-with-where-unique-without-admins.input"), { "manual_adjustmentsUpsertWithWhereUniqueWithoutAdminsInput": { where: {}, update: {}, create: {} } }], [import("./@generated/manual-adjustments/manual-adjustments-update-with-where-unique-without-admins.input"), { "manual_adjustmentsUpdateWithWhereUniqueWithoutAdminsInput": { where: {}, data: {} } }], [import("./@generated/manual-adjustments/manual-adjustments-update-many-with-where-without-admins.input"), { "manual_adjustmentsUpdateManyWithWhereWithoutAdminsInput": { where: {}, data: {} } }], [import("./@generated/manual-adjustments/manual-adjustments-update-many-without-admins-nested.input"), { "manual_adjustmentsUpdateManyWithoutAdminsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/admins/admins-update-without-admin-roles.input"), { "adminsUpdateWithoutAdmin_rolesInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_login_logs: { nullable: true }, manual_adjustments: { nullable: true } } }], [import("./@generated/admins/admins-upsert-with-where-unique-without-admin-roles.input"), { "adminsUpsertWithWhereUniqueWithoutAdmin_rolesInput": { where: {}, update: {}, create: {} } }], [import("./@generated/admins/admins-update-with-where-unique-without-admin-roles.input"), { "adminsUpdateWithWhereUniqueWithoutAdmin_rolesInput": { where: {}, data: {} } }], [import("./@generated/admins/admins-scalar-where.input"), { "adminsScalarWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, admin_role_id: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/admins/admins-update-many-mutation.input"), { "adminsUpdateManyMutationInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/admins/admins-update-many-with-where-without-admin-roles.input"), { "adminsUpdateManyWithWhereWithoutAdmin_rolesInput": { where: {}, data: {} } }], [import("./@generated/admins/admins-update-many-without-admin-roles-nested.input"), { "adminsUpdateManyWithoutAdmin_rolesNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-update-without-role-accesses.input"), { "admin_rolesUpdateWithoutRole_accessesInput": { admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, enabled: { nullable: true }, admins: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-upsert-without-role-accesses.input"), { "admin_rolesUpsertWithoutRole_accessesInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-update-to-one-with-where-without-role-accesses.input"), { "admin_rolesUpdateToOneWithWhereWithoutRole_accessesInput": { where: { nullable: true }, data: {} } }], [import("./@generated/admin-roles/admin-roles-update-one-required-without-role-accesses-nested.input"), { "admin_rolesUpdateOneRequiredWithoutRole_accessesNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-update-without-admin-accesses.input"), { "admin_role_accessesUpdateWithoutAdmin_accessesInput": { admin_roles: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-upsert-with-where-unique-without-admin-accesses.input"), { "admin_role_accessesUpsertWithWhereUniqueWithoutAdmin_accessesInput": { where: {}, update: {}, create: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-update-with-where-unique-without-admin-accesses.input"), { "admin_role_accessesUpdateWithWhereUniqueWithoutAdmin_accessesInput": { where: {}, data: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-unchecked-update-many-without-admin-accesses.input"), { "admin_role_accessesUncheckedUpdateManyWithoutAdmin_accessesInput": { admin_role_id: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-update-many-with-where-without-admin-accesses.input"), { "admin_role_accessesUpdateManyWithWhereWithoutAdmin_accessesInput": { where: {}, data: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-unchecked-update-many-without-admin-accesses-nested.input"), { "admin_role_accessesUncheckedUpdateManyWithoutAdmin_accessesNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-unchecked-update.input"), { "admin_accessesUncheckedUpdateInput": { admin_access_id: { nullable: true }, access_name: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-update-many-mutation.input"), { "admin_accessesUpdateManyMutationInput": { admin_access_id: { nullable: true }, access_name: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-update-many-without-admin-accesses-nested.input"), { "admin_role_accessesUpdateManyWithoutAdmin_accessesNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses-update.input"), { "admin_accessesUpdateInput": { admin_access_id: { nullable: true }, access_name: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/admin-accesses/admin-accesses.model"), { "admin_accesses": { admin_access_id: {}, access_name: {}, role_accesses: { nullable: true }, _count: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses.model"), { "admin_role_accesses": { admin_role_id: {}, admin_access_id: {}, admin_roles: { nullable: true }, admin_accesses: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles.model"), { "admin_roles": { admin_role_id: {}, admin_role_name: {}, enabled: {}, admins: { nullable: true }, role_accesses: { nullable: true }, _count: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates.model"), { "agent_rebates": { agent_rebate_id: {}, agent_id_r: {}, game_id: {}, rebate: {}, created_by: {}, from_date: {}, thru_date: {}, is_active: {}, agents: { nullable: true } } }], [import("./@generated/agents/agents.model"), { "agents": { agent_id: {}, agent_name: {}, agent_password: {}, created_by: {}, cdate: {}, udate: {}, enabled: {}, parent_agent_id: {}, players: { nullable: true }, agent_rebates: { nullable: true }, parent: { nullable: true }, children: { nullable: true }, _count: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs.model"), { "player_login_logs": { player_id_r: {}, ip: {}, login_time: {}, players: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players.model"), { "current_active_players": { player_id_r: {}, last_active_time: {}, players: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates.model"), { "game_rebates": { game_rebates_id: {}, game_history_id: {}, merchant_id: {}, game_id: {}, category: {}, effective_bet_amount: {}, rebate_amount: {}, status: {}, cdate: {}, game_history: { nullable: true } } }], [import("./@generated/game-history/game-history.model"), { "game_history": { game_history_id: {}, game_id: {}, player_id_r: {}, i_gamedesc: {}, bet_amount: {}, win_amount: {}, transaction_date: {}, cdate: {}, players: { nullable: true }, game_rebates: { nullable: true }, _count: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets.model"), { "player_wallets": { player_wallet_id: {}, player_id_r: {}, currency: {}, amount: {}, frozen_amount: {}, cdate: {}, udate: {}, players: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests.model"), { "wallet_requests": { wallet_request_id: {}, t_id: {}, type: {}, player_id_r: {}, currency: {}, amount: {}, i_game_id: {}, i_extparam: {}, i_rollback: {}, i_gamedesc: {}, i_action_id: {}, i_reference_action_id: {}, round_start: {}, round_ended: {}, game_extra: {}, subtype: {}, jackpot_win: {}, hmac: {}, response: {}, players: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions.model"), { "withdrawal_transactions": { withdrawal_transaction_id: {}, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: {}, admin_bank_account_id_r: {}, players: { nullable: true }, admin_bank_accounts: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts.model"), { "admin_bank_accounts": { admin_bank_account_id: {}, bank_name: {}, account_number: {}, holder_name: {}, enabled: {}, method: {}, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, _count: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions.model"), { "deposit_transactions": { deposit_transaction_id: {}, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: {}, admin_bank_account_id_r: {}, players: { nullable: true }, admin_bank_accounts: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions.model"), { "transfer_in_transactions": { transfer_in_Transaction_id: {}, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: {}, counterpart_platform: {}, counterpart_username: {}, players: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions.model"), { "transfer_out_transactions": { transfer_out_transaction_id: {}, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: {}, counterpart_platform: {}, counterpart_username: {}, players: { nullable: true } } }], [import("./@generated/players/players.model"), { "players": { player_id: {}, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, agent_id_r: {}, cdate: {}, udate: {}, enabled: {}, registration_date: {}, agent: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true }, _count: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments.model"), { "manual_adjustments": { manual_adjustment_id: {}, player_id_r: {}, reason: {}, amount: {}, created_by_r: {}, cdate: {}, players: { nullable: true }, admins: { nullable: true } } }], [import("./@generated/admins/admins.model"), { "admins": { admin_id: {}, admin_name: {}, admin_password: {}, admin_role_id: {}, created_by: {}, cdate: {}, udate: {}, enabled: {}, admin_roles: { nullable: true }, admin_login_logs: { nullable: true }, manual_adjustments: { nullable: true }, _count: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs.model"), { "admin_login_logs": { login_id: {}, admin_id_r: {}, ip: {}, login_time: {}, admins: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-count-order-by-aggregate.input"), { "admin_bank_accountsCountOrderByAggregateInput": { admin_bank_account_id: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-create-many.input"), { "admin_bank_accountsCreateManyInput": { admin_bank_account_id: { nullable: true }, bank_name: {}, account_number: {}, holder_name: {}, enabled: { nullable: true }, method: {} } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-create.input"), { "admin_bank_accountsCreateInput": { admin_bank_account_id: { nullable: true }, bank_name: {}, account_number: {}, holder_name: {}, enabled: { nullable: true }, method: {}, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-max-order-by-aggregate.input"), { "admin_bank_accountsMaxOrderByAggregateInput": { admin_bank_account_id: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-min-order-by-aggregate.input"), { "admin_bank_accountsMinOrderByAggregateInput": { admin_bank_account_id: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-order-by-with-aggregation.input"), { "admin_bank_accountsOrderByWithAggregationInput": { admin_bank_account_id: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true }, _count: { nullable: true }, _max: { nullable: true }, _min: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-order-by-relation-aggregate.input"), { "deposit_transactionsOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-order-by-relation-aggregate.input"), { "withdrawal_transactionsOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-order-by-with-relation.input"), { "admin_bank_accountsOrderByWithRelationInput": { admin_bank_account_id: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true } } }], [import("./@generated/prisma/nested-bool-with-aggregates-filter.input"), { "NestedBoolWithAggregatesFilter": { equals: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/bool-with-aggregates-filter.input"), { "BoolWithAggregatesFilter": { equals: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-scalar-where-with-aggregates.input"), { "admin_bank_accountsScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, admin_bank_account_id: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-unchecked-create-nested-many-without-admin-bank-accounts.input"), { "withdrawal_transactionsUncheckedCreateNestedManyWithoutAdmin_bank_accountsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-unchecked-create-without-deposit-transactions.input"), { "admin_bank_accountsUncheckedCreateWithoutDeposit_transactionsInput": { admin_bank_account_id: { nullable: true }, bank_name: {}, account_number: {}, holder_name: {}, enabled: { nullable: true }, method: {}, withdrawal_transactions: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-unchecked-create-nested-many-without-admin-bank-accounts.input"), { "deposit_transactionsUncheckedCreateNestedManyWithoutAdmin_bank_accountsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-unchecked-create-without-withdrawal-transactions.input"), { "admin_bank_accountsUncheckedCreateWithoutWithdrawal_transactionsInput": { admin_bank_account_id: { nullable: true }, bank_name: {}, account_number: {}, holder_name: {}, enabled: { nullable: true }, method: {}, deposit_transactions: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-unchecked-create.input"), { "admin_bank_accountsUncheckedCreateInput": { admin_bank_account_id: { nullable: true }, bank_name: {}, account_number: {}, holder_name: {}, enabled: { nullable: true }, method: {}, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-unchecked-update-many.input"), { "admin_bank_accountsUncheckedUpdateManyInput": { admin_bank_account_id: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-unchecked-update-many-without-admin-bank-accounts-nested.input"), { "withdrawal_transactionsUncheckedUpdateManyWithoutAdmin_bank_accountsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-unchecked-update-without-deposit-transactions.input"), { "admin_bank_accountsUncheckedUpdateWithoutDeposit_transactionsInput": { admin_bank_account_id: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true }, withdrawal_transactions: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-unchecked-update-many-without-admin-bank-accounts-nested.input"), { "deposit_transactionsUncheckedUpdateManyWithoutAdmin_bank_accountsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-unchecked-update-without-withdrawal-transactions.input"), { "admin_bank_accountsUncheckedUpdateWithoutWithdrawal_transactionsInput": { admin_bank_account_id: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true }, deposit_transactions: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-unchecked-update.input"), { "admin_bank_accountsUncheckedUpdateInput": { admin_bank_account_id: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-update-many-mutation.input"), { "admin_bank_accountsUpdateManyMutationInput": { admin_bank_account_id: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true } } }], [import("./@generated/admin-bank-accounts/admin-bank-accounts-update.input"), { "admin_bank_accountsUpdateInput": { admin_bank_account_id: { nullable: true }, bank_name: { nullable: true }, account_number: { nullable: true }, holder_name: { nullable: true }, enabled: { nullable: true }, method: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-count-order-by-aggregate.input"), { "admin_login_logsCountOrderByAggregateInput": { login_id: { nullable: true }, admin_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-create-many.input"), { "admin_login_logsCreateManyInput": { login_id: { nullable: true }, admin_id_r: {}, ip: {}, login_time: { nullable: true } } }], [import("./@generated/admins/admins-create-without-admin-login-logs.input"), { "adminsCreateWithoutAdmin_login_logsInput": { admin_id: { nullable: true }, admin_name: {}, admin_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_roles: {}, manual_adjustments: { nullable: true } } }], [import("./@generated/admins/admins-create-or-connect-without-admin-login-logs.input"), { "adminsCreateOrConnectWithoutAdmin_login_logsInput": { where: {}, create: {} } }], [import("./@generated/admins/admins-create-nested-one-without-admin-login-logs.input"), { "adminsCreateNestedOneWithoutAdmin_login_logsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-create.input"), { "admin_login_logsCreateInput": { login_id: { nullable: true }, ip: {}, login_time: { nullable: true }, admins: {} } }], [import("./@generated/admin-login-logs/admin-login-logs-max-order-by-aggregate.input"), { "admin_login_logsMaxOrderByAggregateInput": { login_id: { nullable: true }, admin_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-min-order-by-aggregate.input"), { "admin_login_logsMinOrderByAggregateInput": { login_id: { nullable: true }, admin_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-order-by-relation-aggregate.input"), { "admin_login_logsOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-order-by-with-aggregation.input"), { "admin_login_logsOrderByWithAggregationInput": { login_id: { nullable: true }, admin_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true }, _count: { nullable: true }, _max: { nullable: true }, _min: { nullable: true } } }], [import("./@generated/admins/admins-order-by-relation-aggregate.input"), { "adminsOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-order-by-with-relation.input"), { "admin_rolesOrderByWithRelationInput": { admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, enabled: { nullable: true }, admins: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-order-by-relation-aggregate.input"), { "manual_adjustmentsOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/admins/admins-order-by-with-relation.input"), { "adminsOrderByWithRelationInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, admin_role_id: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_roles: { nullable: true }, admin_login_logs: { nullable: true }, manual_adjustments: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-order-by-with-relation.input"), { "admin_login_logsOrderByWithRelationInput": { login_id: { nullable: true }, admin_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true }, admins: { nullable: true } } }], [import("./@generated/prisma/nested-date-time-with-aggregates-filter.input"), { "NestedDateTimeWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/date-time-with-aggregates-filter.input"), { "DateTimeWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-scalar-where-with-aggregates.input"), { "admin_login_logsScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, login_id: { nullable: true }, admin_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-unchecked-create-nested-many-without-admins.input"), { "admin_login_logsUncheckedCreateNestedManyWithoutAdminsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-unchecked-create-without-admins.input"), { "admin_login_logsUncheckedCreateWithoutAdminsInput": { login_id: { nullable: true }, ip: {}, login_time: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-unchecked-create.input"), { "admin_login_logsUncheckedCreateInput": { login_id: { nullable: true }, admin_id_r: {}, ip: {}, login_time: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-unchecked-update-many-without-admins-nested.input"), { "admin_login_logsUncheckedUpdateManyWithoutAdminsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-unchecked-update-many-without-admins.input"), { "admin_login_logsUncheckedUpdateManyWithoutAdminsInput": { login_id: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-unchecked-update-many.input"), { "admin_login_logsUncheckedUpdateManyInput": { login_id: { nullable: true }, admin_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-unchecked-update-without-admins.input"), { "admin_login_logsUncheckedUpdateWithoutAdminsInput": { login_id: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-unchecked-update.input"), { "admin_login_logsUncheckedUpdateInput": { login_id: { nullable: true }, admin_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/admins/admins-update-without-admin-login-logs.input"), { "adminsUpdateWithoutAdmin_login_logsInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_roles: { nullable: true }, manual_adjustments: { nullable: true } } }], [import("./@generated/admins/admins-upsert-without-admin-login-logs.input"), { "adminsUpsertWithoutAdmin_login_logsInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/admins/admins-update-to-one-with-where-without-admin-login-logs.input"), { "adminsUpdateToOneWithWhereWithoutAdmin_login_logsInput": { where: { nullable: true }, data: {} } }], [import("./@generated/admins/admins-update-one-required-without-admin-login-logs-nested.input"), { "adminsUpdateOneRequiredWithoutAdmin_login_logsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/admin-login-logs/admin-login-logs-update.input"), { "admin_login_logsUpdateInput": { login_id: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true }, admins: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-count-order-by-aggregate.input"), { "admin_role_accessesCountOrderByAggregateInput": { admin_role_id: { nullable: true }, admin_access_id: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-create-many.input"), { "admin_role_accessesCreateManyInput": { admin_role_id: {}, admin_access_id: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-create.input"), { "admin_role_accessesCreateInput": { admin_roles: {}, admin_accesses: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-max-order-by-aggregate.input"), { "admin_role_accessesMaxOrderByAggregateInput": { admin_role_id: { nullable: true }, admin_access_id: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-min-order-by-aggregate.input"), { "admin_role_accessesMinOrderByAggregateInput": { admin_role_id: { nullable: true }, admin_access_id: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-order-by-with-aggregation.input"), { "admin_role_accessesOrderByWithAggregationInput": { admin_role_id: { nullable: true }, admin_access_id: { nullable: true }, _count: { nullable: true }, _max: { nullable: true }, _min: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-order-by-with-relation.input"), { "admin_role_accessesOrderByWithRelationInput": { admin_role_id: { nullable: true }, admin_access_id: { nullable: true }, admin_roles: { nullable: true }, admin_accesses: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-scalar-where-with-aggregates.input"), { "admin_role_accessesScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, admin_role_id: { nullable: true }, admin_access_id: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-unchecked-create-nested-many-without-admin-roles.input"), { "admin_role_accessesUncheckedCreateNestedManyWithoutAdmin_rolesInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-unchecked-create-without-admin-accesses.input"), { "admin_role_accessesUncheckedCreateWithoutAdmin_accessesInput": { admin_role_id: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-unchecked-create-without-admin-roles.input"), { "admin_role_accessesUncheckedCreateWithoutAdmin_rolesInput": { admin_access_id: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-unchecked-create.input"), { "admin_role_accessesUncheckedCreateInput": { admin_role_id: {}, admin_access_id: {} } }], [import("./@generated/admin-role-accesses/admin-role-accesses-unchecked-update-many-without-admin-roles-nested.input"), { "admin_role_accessesUncheckedUpdateManyWithoutAdmin_rolesNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-unchecked-update-many.input"), { "admin_role_accessesUncheckedUpdateManyInput": { admin_role_id: { nullable: true }, admin_access_id: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-unchecked-update-without-admin-accesses.input"), { "admin_role_accessesUncheckedUpdateWithoutAdmin_accessesInput": { admin_role_id: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-unchecked-update-without-admin-roles.input"), { "admin_role_accessesUncheckedUpdateWithoutAdmin_rolesInput": { admin_access_id: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-unchecked-update.input"), { "admin_role_accessesUncheckedUpdateInput": { admin_role_id: { nullable: true }, admin_access_id: { nullable: true } } }], [import("./@generated/admin-role-accesses/admin-role-accesses-update.input"), { "admin_role_accessesUpdateInput": { admin_roles: { nullable: true }, admin_accesses: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-count-order-by-aggregate.input"), { "admin_rolesCountOrderByAggregateInput": { admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-create-many.input"), { "admin_rolesCreateManyInput": { admin_role_id: { nullable: true }, admin_role_name: {}, enabled: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-create.input"), { "admin_rolesCreateInput": { admin_role_id: { nullable: true }, admin_role_name: {}, enabled: { nullable: true }, admins: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-max-order-by-aggregate.input"), { "admin_rolesMaxOrderByAggregateInput": { admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-min-order-by-aggregate.input"), { "admin_rolesMinOrderByAggregateInput": { admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-order-by-with-aggregation.input"), { "admin_rolesOrderByWithAggregationInput": { admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, enabled: { nullable: true }, _count: { nullable: true }, _max: { nullable: true }, _min: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-scalar-where-with-aggregates.input"), { "admin_rolesScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-unchecked-create-without-admins.input"), { "admin_rolesUncheckedCreateWithoutAdminsInput": { admin_role_id: { nullable: true }, admin_role_name: {}, enabled: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/admins/admins-unchecked-create-nested-many-without-admin-roles.input"), { "adminsUncheckedCreateNestedManyWithoutAdmin_rolesInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-unchecked-create-without-role-accesses.input"), { "admin_rolesUncheckedCreateWithoutRole_accessesInput": { admin_role_id: { nullable: true }, admin_role_name: {}, enabled: { nullable: true }, admins: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-unchecked-create.input"), { "admin_rolesUncheckedCreateInput": { admin_role_id: { nullable: true }, admin_role_name: {}, enabled: { nullable: true }, admins: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-unchecked-update-many.input"), { "admin_rolesUncheckedUpdateManyInput": { admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-unchecked-update-without-admins.input"), { "admin_rolesUncheckedUpdateWithoutAdminsInput": { admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, enabled: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/admins/admins-unchecked-update-many-without-admin-roles-nested.input"), { "adminsUncheckedUpdateManyWithoutAdmin_rolesNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-unchecked-update-without-role-accesses.input"), { "admin_rolesUncheckedUpdateWithoutRole_accessesInput": { admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, enabled: { nullable: true }, admins: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-unchecked-update.input"), { "admin_rolesUncheckedUpdateInput": { admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, enabled: { nullable: true }, admins: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-update-many-mutation.input"), { "admin_rolesUpdateManyMutationInput": { admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/admin-roles/admin-roles-update.input"), { "admin_rolesUpdateInput": { admin_role_id: { nullable: true }, admin_role_name: { nullable: true }, enabled: { nullable: true }, admins: { nullable: true }, role_accesses: { nullable: true } } }], [import("./@generated/admins/admins-aggregate.args"), { "adminsAggregateArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/admins/admins-count-order-by-aggregate.input"), { "adminsCountOrderByAggregateInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, admin_role_id: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/admins/admins-create-many.input"), { "adminsCreateManyInput": { admin_id: { nullable: true }, admin_name: {}, admin_password: {}, admin_role_id: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/admins/admins-create.input"), { "adminsCreateInput": { admin_id: { nullable: true }, admin_name: {}, admin_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_roles: {}, admin_login_logs: { nullable: true }, manual_adjustments: { nullable: true } } }], [import("./@generated/admins/admins-max-order-by-aggregate.input"), { "adminsMaxOrderByAggregateInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, admin_role_id: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/admins/admins-min-order-by-aggregate.input"), { "adminsMinOrderByAggregateInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, admin_role_id: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/admins/admins-order-by-with-aggregation.input"), { "adminsOrderByWithAggregationInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, admin_role_id: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, _count: { nullable: true }, _max: { nullable: true }, _min: { nullable: true } } }], [import("./@generated/admins/admins-scalar-where-with-aggregates.input"), { "adminsScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, admin_role_id: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/admins/admins-group-by.args"), { "adminsGroupByArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-unchecked-create-nested-many-without-admins.input"), { "manual_adjustmentsUncheckedCreateNestedManyWithoutAdminsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/admins/admins-unchecked-create-without-admin-login-logs.input"), { "adminsUncheckedCreateWithoutAdmin_login_logsInput": { admin_id: { nullable: true }, admin_name: {}, admin_password: {}, admin_role_id: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, manual_adjustments: { nullable: true } } }], [import("./@generated/admins/admins-unchecked-create-without-admin-roles.input"), { "adminsUncheckedCreateWithoutAdmin_rolesInput": { admin_id: { nullable: true }, admin_name: {}, admin_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_login_logs: { nullable: true }, manual_adjustments: { nullable: true } } }], [import("./@generated/admins/admins-unchecked-create-without-manual-adjustments.input"), { "adminsUncheckedCreateWithoutManual_adjustmentsInput": { admin_id: { nullable: true }, admin_name: {}, admin_password: {}, admin_role_id: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_login_logs: { nullable: true } } }], [import("./@generated/admins/admins-unchecked-create.input"), { "adminsUncheckedCreateInput": { admin_id: { nullable: true }, admin_name: {}, admin_password: {}, admin_role_id: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_login_logs: { nullable: true }, manual_adjustments: { nullable: true } } }], [import("./@generated/admins/admins-unchecked-update-many-without-admin-roles.input"), { "adminsUncheckedUpdateManyWithoutAdmin_rolesInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/admins/admins-unchecked-update-many.input"), { "adminsUncheckedUpdateManyInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, admin_role_id: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-unchecked-update-many-without-admins-nested.input"), { "manual_adjustmentsUncheckedUpdateManyWithoutAdminsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/admins/admins-unchecked-update-without-admin-login-logs.input"), { "adminsUncheckedUpdateWithoutAdmin_login_logsInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, admin_role_id: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, manual_adjustments: { nullable: true } } }], [import("./@generated/admins/admins-unchecked-update-without-admin-roles.input"), { "adminsUncheckedUpdateWithoutAdmin_rolesInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_login_logs: { nullable: true }, manual_adjustments: { nullable: true } } }], [import("./@generated/admins/admins-unchecked-update-without-manual-adjustments.input"), { "adminsUncheckedUpdateWithoutManual_adjustmentsInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, admin_role_id: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_login_logs: { nullable: true } } }], [import("./@generated/admins/admins-unchecked-update.input"), { "adminsUncheckedUpdateInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, admin_role_id: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_login_logs: { nullable: true }, manual_adjustments: { nullable: true } } }], [import("./@generated/admins/admins-update.input"), { "adminsUpdateInput": { admin_id: { nullable: true }, admin_name: { nullable: true }, admin_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, admin_roles: { nullable: true }, admin_login_logs: { nullable: true }, manual_adjustments: { nullable: true } } }], [import("./@generated/admins/create-manyadmins.args"), { "CreateManyadminsArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/admins/create-oneadmins.args"), { "CreateOneadminsArgs": { data: {} } }], [import("./@generated/admins/delete-manyadmins.args"), { "DeleteManyadminsArgs": { where: { nullable: true } } }], [import("./@generated/admins/delete-oneadmins.args"), { "DeleteOneadminsArgs": { where: {} } }], [import("./@generated/admins/find-firstadmins-or-throw.args"), { "FindFirstadminsOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/admins/find-firstadmins.args"), { "FindFirstadminsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/admins/find-manyadmins.args"), { "FindManyadminsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/admins/find-uniqueadmins-or-throw.args"), { "FindUniqueadminsOrThrowArgs": { where: {} } }], [import("./@generated/admins/find-uniqueadmins.args"), { "FindUniqueadminsArgs": { where: {} } }], [import("./@generated/admins/update-manyadmins.args"), { "UpdateManyadminsArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/admins/update-oneadmins.args"), { "UpdateOneadminsArgs": { data: {}, where: {} } }], [import("./@generated/admins/upsert-oneadmins.args"), { "UpsertOneadminsArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/agent-rebates/agent-rebates-avg-order-by-aggregate.input"), { "agent_rebatesAvgOrderByAggregateInput": { rebate: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-count-order-by-aggregate.input"), { "agent_rebatesCountOrderByAggregateInput": { agent_rebate_id: { nullable: true }, agent_id_r: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-create-many.input"), { "agent_rebatesCreateManyInput": { agent_rebate_id: { nullable: true }, agent_id_r: {}, game_id: {}, rebate: {}, created_by: {}, from_date: {}, thru_date: {}, is_active: {} } }], [import("./@generated/agents/agents-create-without-agent-rebates.input"), { "agentsCreateWithoutAgent_rebatesInput": { agent_id: { nullable: true }, agent_name: {}, agent_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, players: { nullable: true }, parent: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-create-or-connect-without-agent-rebates.input"), { "agentsCreateOrConnectWithoutAgent_rebatesInput": { where: {}, create: {} } }], [import("./@generated/agents/agents-create-nested-one-without-agent-rebates.input"), { "agentsCreateNestedOneWithoutAgent_rebatesInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-create.input"), { "agent_rebatesCreateInput": { agent_rebate_id: { nullable: true }, game_id: {}, rebate: {}, created_by: {}, from_date: {}, thru_date: {}, is_active: {}, agents: {} } }], [import("./@generated/agent-rebates/agent-rebates-max-order-by-aggregate.input"), { "agent_rebatesMaxOrderByAggregateInput": { agent_rebate_id: { nullable: true }, agent_id_r: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-min-order-by-aggregate.input"), { "agent_rebatesMinOrderByAggregateInput": { agent_rebate_id: { nullable: true }, agent_id_r: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-order-by-relation-aggregate.input"), { "agent_rebatesOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-sum-order-by-aggregate.input"), { "agent_rebatesSumOrderByAggregateInput": { rebate: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-order-by-with-aggregation.input"), { "agent_rebatesOrderByWithAggregationInput": { agent_rebate_id: { nullable: true }, agent_id_r: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _max: { nullable: true }, _min: { nullable: true }, _sum: { nullable: true } } }], [import("./@generated/prisma/sort-order.input"), { "SortOrderInput": { sort: {}, nulls: { nullable: true } } }], [import("./@generated/players/players-order-by-relation-aggregate.input"), { "playersOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/agents/agents-order-by-relation-aggregate.input"), { "agentsOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/agents/agents-order-by-with-relation.input"), { "agentsOrderByWithRelationInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true }, players: { nullable: true }, agent_rebates: { nullable: true }, parent: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-order-by-with-relation.input"), { "agent_rebatesOrderByWithRelationInput": { agent_rebate_id: { nullable: true }, agent_id_r: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true }, agents: { nullable: true } } }], [import("./@generated/prisma/nested-float-with-aggregates-filter.input"), { "NestedFloatWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _sum: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/float-with-aggregates-filter.input"), { "FloatWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _sum: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-scalar-where-with-aggregates.input"), { "agent_rebatesScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, agent_rebate_id: { nullable: true }, agent_id_r: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-unchecked-create-nested-many-without-agents.input"), { "agent_rebatesUncheckedCreateNestedManyWithoutAgentsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-unchecked-create-without-agents.input"), { "agent_rebatesUncheckedCreateWithoutAgentsInput": { agent_rebate_id: { nullable: true }, game_id: {}, rebate: {}, created_by: {}, from_date: {}, thru_date: {}, is_active: {} } }], [import("./@generated/agent-rebates/agent-rebates-unchecked-create.input"), { "agent_rebatesUncheckedCreateInput": { agent_rebate_id: { nullable: true }, agent_id_r: {}, game_id: {}, rebate: {}, created_by: {}, from_date: {}, thru_date: {}, is_active: {} } }], [import("./@generated/agent-rebates/agent-rebates-unchecked-update-many-without-agents-nested.input"), { "agent_rebatesUncheckedUpdateManyWithoutAgentsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-unchecked-update-many-without-agents.input"), { "agent_rebatesUncheckedUpdateManyWithoutAgentsInput": { agent_rebate_id: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-unchecked-update-many.input"), { "agent_rebatesUncheckedUpdateManyInput": { agent_rebate_id: { nullable: true }, agent_id_r: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-unchecked-update-without-agents.input"), { "agent_rebatesUncheckedUpdateWithoutAgentsInput": { agent_rebate_id: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-unchecked-update.input"), { "agent_rebatesUncheckedUpdateInput": { agent_rebate_id: { nullable: true }, agent_id_r: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true } } }], [import("./@generated/agents/agents-update-without-agent-rebates.input"), { "agentsUpdateWithoutAgent_rebatesInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, players: { nullable: true }, parent: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-upsert-without-agent-rebates.input"), { "agentsUpsertWithoutAgent_rebatesInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/agents/agents-update-to-one-with-where-without-agent-rebates.input"), { "agentsUpdateToOneWithWhereWithoutAgent_rebatesInput": { where: { nullable: true }, data: {} } }], [import("./@generated/agents/agents-update-one-required-without-agent-rebates-nested.input"), { "agentsUpdateOneRequiredWithoutAgent_rebatesNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/agent-rebates/agent-rebates-update.input"), { "agent_rebatesUpdateInput": { agent_rebate_id: { nullable: true }, game_id: { nullable: true }, rebate: { nullable: true }, created_by: { nullable: true }, from_date: { nullable: true }, thru_date: { nullable: true }, is_active: { nullable: true }, agents: { nullable: true } } }], [import("./@generated/agents/agents-aggregate.args"), { "agentsAggregateArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/agents/agents-count-order-by-aggregate.input"), { "agentsCountOrderByAggregateInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true } } }], [import("./@generated/agents/agents-create-many.input"), { "agentsCreateManyInput": { agent_id: { nullable: true }, agent_name: {}, agent_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true } } }], [import("./@generated/agents/agents-create.input"), { "agentsCreateInput": { agent_id: { nullable: true }, agent_name: {}, agent_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, players: { nullable: true }, agent_rebates: { nullable: true }, parent: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-max-order-by-aggregate.input"), { "agentsMaxOrderByAggregateInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true } } }], [import("./@generated/agents/agents-min-order-by-aggregate.input"), { "agentsMinOrderByAggregateInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true } } }], [import("./@generated/agents/agents-order-by-with-aggregation.input"), { "agentsOrderByWithAggregationInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true }, _count: { nullable: true }, _max: { nullable: true }, _min: { nullable: true } } }], [import("./@generated/prisma/nested-int-nullable-filter.input"), { "NestedIntNullableFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/nested-string-nullable-with-aggregates-filter.input"), { "NestedStringNullableWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/string-nullable-with-aggregates-filter.input"), { "StringNullableWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, mode: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/agents/agents-scalar-where-with-aggregates.input"), { "agentsScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true } } }], [import("./@generated/agents/agents-group-by.args"), { "agentsGroupByArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/agents/agents-unchecked-create-nested-many-without-parent.input"), { "agentsUncheckedCreateNestedManyWithoutParentInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/players/players-unchecked-create-nested-many-without-agent.input"), { "playersUncheckedCreateNestedManyWithoutAgentInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/agents/agents-unchecked-create-without-agent-rebates.input"), { "agentsUncheckedCreateWithoutAgent_rebatesInput": { agent_id: { nullable: true }, agent_name: {}, agent_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true }, players: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-unchecked-create-without-children.input"), { "agentsUncheckedCreateWithoutChildrenInput": { agent_id: { nullable: true }, agent_name: {}, agent_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true }, players: { nullable: true }, agent_rebates: { nullable: true } } }], [import("./@generated/agents/agents-unchecked-create-without-parent.input"), { "agentsUncheckedCreateWithoutParentInput": { agent_id: { nullable: true }, agent_name: {}, agent_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, players: { nullable: true }, agent_rebates: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-unchecked-create-without-players.input"), { "agentsUncheckedCreateWithoutPlayersInput": { agent_id: { nullable: true }, agent_name: {}, agent_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true }, agent_rebates: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-unchecked-create.input"), { "agentsUncheckedCreateInput": { agent_id: { nullable: true }, agent_name: {}, agent_password: {}, created_by: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true }, players: { nullable: true }, agent_rebates: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-unchecked-update-many-without-parent-nested.input"), { "agentsUncheckedUpdateManyWithoutParentNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/agents/agents-unchecked-update-many-without-parent.input"), { "agentsUncheckedUpdateManyWithoutParentInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true } } }], [import("./@generated/prisma/nullable-string-field-update-operations.input"), { "NullableStringFieldUpdateOperationsInput": { set: { nullable: true } } }], [import("./@generated/agents/agents-unchecked-update-many.input"), { "agentsUncheckedUpdateManyInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true } } }], [import("./@generated/players/players-unchecked-update-many-without-agent-nested.input"), { "playersUncheckedUpdateManyWithoutAgentNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/agents/agents-unchecked-update-without-agent-rebates.input"), { "agentsUncheckedUpdateWithoutAgent_rebatesInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true }, players: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-unchecked-update-without-children.input"), { "agentsUncheckedUpdateWithoutChildrenInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true }, players: { nullable: true }, agent_rebates: { nullable: true } } }], [import("./@generated/agents/agents-unchecked-update-without-parent.input"), { "agentsUncheckedUpdateWithoutParentInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, players: { nullable: true }, agent_rebates: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-unchecked-update-without-players.input"), { "agentsUncheckedUpdateWithoutPlayersInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true }, agent_rebates: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-unchecked-update.input"), { "agentsUncheckedUpdateInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, parent_agent_id: { nullable: true }, players: { nullable: true }, agent_rebates: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/agents-update.input"), { "agentsUpdateInput": { agent_id: { nullable: true }, agent_name: { nullable: true }, agent_password: { nullable: true }, created_by: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, players: { nullable: true }, agent_rebates: { nullable: true }, parent: { nullable: true }, children: { nullable: true } } }], [import("./@generated/agents/create-manyagents.args"), { "CreateManyagentsArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/agents/create-oneagents.args"), { "CreateOneagentsArgs": { data: {} } }], [import("./@generated/agents/delete-manyagents.args"), { "DeleteManyagentsArgs": { where: { nullable: true } } }], [import("./@generated/agents/delete-oneagents.args"), { "DeleteOneagentsArgs": { where: {} } }], [import("./@generated/agents/find-firstagents-or-throw.args"), { "FindFirstagentsOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/agents/find-firstagents.args"), { "FindFirstagentsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/agents/find-manyagents.args"), { "FindManyagentsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/agents/find-uniqueagents-or-throw.args"), { "FindUniqueagentsOrThrowArgs": { where: {} } }], [import("./@generated/agents/find-uniqueagents.args"), { "FindUniqueagentsArgs": { where: {} } }], [import("./@generated/agents/update-manyagents.args"), { "UpdateManyagentsArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/agents/update-oneagents.args"), { "UpdateOneagentsArgs": { data: {}, where: {} } }], [import("./@generated/agents/upsert-oneagents.args"), { "UpsertOneagentsArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/all-ow-requests/all-ow-requests-count-order-by-aggregate.input"), { "all_ow_requestsCountOrderByAggregateInput": { allow_request_id: { nullable: true }, request: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/all-ow-requests/all-ow-requests-create-many.input"), { "all_ow_requestsCreateManyInput": { allow_request_id: { nullable: true }, request: {}, cdate: { nullable: true } } }], [import("./@generated/all-ow-requests/all-ow-requests-create.input"), { "all_ow_requestsCreateInput": { allow_request_id: { nullable: true }, request: {}, cdate: { nullable: true } } }], [import("./@generated/all-ow-requests/all-ow-requests-max-order-by-aggregate.input"), { "all_ow_requestsMaxOrderByAggregateInput": { allow_request_id: { nullable: true }, request: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/all-ow-requests/all-ow-requests-min-order-by-aggregate.input"), { "all_ow_requestsMinOrderByAggregateInput": { allow_request_id: { nullable: true }, request: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/all-ow-requests/all-ow-requests-order-by-with-aggregation.input"), { "all_ow_requestsOrderByWithAggregationInput": { allow_request_id: { nullable: true }, request: { nullable: true }, cdate: { nullable: true }, _count: { nullable: true }, _max: { nullable: true }, _min: { nullable: true } } }], [import("./@generated/all-ow-requests/all-ow-requests-order-by-with-relation.input"), { "all_ow_requestsOrderByWithRelationInput": { allow_request_id: { nullable: true }, request: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/all-ow-requests/all-ow-requests-scalar-where-with-aggregates.input"), { "all_ow_requestsScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, allow_request_id: { nullable: true }, request: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/all-ow-requests/all-ow-requests-unchecked-create.input"), { "all_ow_requestsUncheckedCreateInput": { allow_request_id: { nullable: true }, request: {}, cdate: { nullable: true } } }], [import("./@generated/all-ow-requests/all-ow-requests-unchecked-update-many.input"), { "all_ow_requestsUncheckedUpdateManyInput": { allow_request_id: { nullable: true }, request: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/all-ow-requests/all-ow-requests-unchecked-update.input"), { "all_ow_requestsUncheckedUpdateInput": { allow_request_id: { nullable: true }, request: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/all-ow-requests/all-ow-requests-update-many-mutation.input"), { "all_ow_requestsUpdateManyMutationInput": { allow_request_id: { nullable: true }, request: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/all-ow-requests/all-ow-requests-update.input"), { "all_ow_requestsUpdateInput": { allow_request_id: { nullable: true }, request: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/all-ow-requests/all-ow-requests-where.input"), { "all_ow_requestsWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, allow_request_id: { nullable: true }, request: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/all-ow-requests/all-ow-requests-where-unique.input"), { "all_ow_requestsWhereUniqueInput": { allow_request_id: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, request: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/all-ow-requests/all-ow-requests.model"), { "all_ow_requests": { allow_request_id: {}, request: {}, cdate: {} } }], [import("./@generated/current-active-players/current-active-players-count-order-by-aggregate.input"), { "current_active_playersCountOrderByAggregateInput": { player_id_r: { nullable: true }, last_active_time: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-create-many.input"), { "current_active_playersCreateManyInput": { player_id_r: {}, last_active_time: {} } }], [import("./@generated/players/players-create-without-current-active-players.input"), { "playersCreateWithoutCurrent_active_playersInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, agent: {}, player_login_logs: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-create-or-connect-without-current-active-players.input"), { "playersCreateOrConnectWithoutCurrent_active_playersInput": { where: {}, create: {} } }], [import("./@generated/players/players-create-nested-one-without-current-active-players.input"), { "playersCreateNestedOneWithoutCurrent_active_playersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-create.input"), { "current_active_playersCreateInput": { last_active_time: {}, players: {} } }], [import("./@generated/current-active-players/current-active-players-max-order-by-aggregate.input"), { "current_active_playersMaxOrderByAggregateInput": { player_id_r: { nullable: true }, last_active_time: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-min-order-by-aggregate.input"), { "current_active_playersMinOrderByAggregateInput": { player_id_r: { nullable: true }, last_active_time: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-order-by-relation-aggregate.input"), { "current_active_playersOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-order-by-with-aggregation.input"), { "current_active_playersOrderByWithAggregationInput": { player_id_r: { nullable: true }, last_active_time: { nullable: true }, _count: { nullable: true }, _max: { nullable: true }, _min: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-order-by-relation-aggregate.input"), { "player_login_logsOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/game-history/game-history-order-by-relation-aggregate.input"), { "game_historyOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-order-by-relation-aggregate.input"), { "player_walletsOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-order-by-relation-aggregate.input"), { "wallet_requestsOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-order-by-relation-aggregate.input"), { "transfer_in_transactionsOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-order-by-relation-aggregate.input"), { "transfer_out_transactionsOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/players/players-order-by-with-relation.input"), { "playersOrderByWithRelationInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, agent: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-order-by-with-relation.input"), { "current_active_playersOrderByWithRelationInput": { player_id_r: { nullable: true }, last_active_time: { nullable: true }, players: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-scalar-where-with-aggregates.input"), { "current_active_playersScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_id_r: { nullable: true }, last_active_time: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-unchecked-create-nested-many-without-players.input"), { "current_active_playersUncheckedCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-unchecked-create-without-players.input"), { "current_active_playersUncheckedCreateWithoutPlayersInput": { last_active_time: {} } }], [import("./@generated/current-active-players/current-active-players-unchecked-create.input"), { "current_active_playersUncheckedCreateInput": { player_id_r: {}, last_active_time: {} } }], [import("./@generated/current-active-players/current-active-players-unchecked-update-many-without-players-nested.input"), { "current_active_playersUncheckedUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-unchecked-update-many-without-players.input"), { "current_active_playersUncheckedUpdateManyWithoutPlayersInput": { last_active_time: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-unchecked-update-many.input"), { "current_active_playersUncheckedUpdateManyInput": { player_id_r: { nullable: true }, last_active_time: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-unchecked-update-without-players.input"), { "current_active_playersUncheckedUpdateWithoutPlayersInput": { last_active_time: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-unchecked-update.input"), { "current_active_playersUncheckedUpdateInput": { player_id_r: { nullable: true }, last_active_time: { nullable: true } } }], [import("./@generated/players/players-update-without-current-active-players.input"), { "playersUpdateWithoutCurrent_active_playersInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, agent: { nullable: true }, player_login_logs: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-upsert-without-current-active-players.input"), { "playersUpsertWithoutCurrent_active_playersInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/players/players-update-to-one-with-where-without-current-active-players.input"), { "playersUpdateToOneWithWhereWithoutCurrent_active_playersInput": { where: { nullable: true }, data: {} } }], [import("./@generated/players/players-update-one-required-without-current-active-players-nested.input"), { "playersUpdateOneRequiredWithoutCurrent_active_playersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/current-active-players/current-active-players-update.input"), { "current_active_playersUpdateInput": { last_active_time: { nullable: true }, players: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-avg-order-by-aggregate.input"), { "deposit_transactionsAvgOrderByAggregateInput": { amount: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-count-order-by-aggregate.input"), { "deposit_transactionsCountOrderByAggregateInput": { deposit_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-create-many.input"), { "deposit_transactionsCreateManyInput": { deposit_transaction_id: { nullable: true }, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, admin_bank_account_id_r: {} } }], [import("./@generated/deposit-transactions/deposit-transactions-create.input"), { "deposit_transactionsCreateInput": { deposit_transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, players: {}, admin_bank_accounts: {} } }], [import("./@generated/deposit-transactions/deposit-transactions-max-order-by-aggregate.input"), { "deposit_transactionsMaxOrderByAggregateInput": { deposit_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-min-order-by-aggregate.input"), { "deposit_transactionsMinOrderByAggregateInput": { deposit_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-sum-order-by-aggregate.input"), { "deposit_transactionsSumOrderByAggregateInput": { amount: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-order-by-with-aggregation.input"), { "deposit_transactionsOrderByWithAggregationInput": { deposit_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _max: { nullable: true }, _min: { nullable: true }, _sum: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-order-by-with-relation.input"), { "deposit_transactionsOrderByWithRelationInput": { deposit_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true }, players: { nullable: true }, admin_bank_accounts: { nullable: true } } }], [import("./@generated/prisma/nested-enum-transaction-type-with-aggregates-filter.input"), { "NestedEnumTransactionTypeWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/enum-transaction-type-with-aggregates-filter.input"), { "EnumTransactionTypeWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-scalar-where-with-aggregates.input"), { "deposit_transactionsScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, deposit_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-unchecked-create-nested-many-without-players.input"), { "deposit_transactionsUncheckedCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-unchecked-create-without-admin-bank-accounts.input"), { "deposit_transactionsUncheckedCreateWithoutAdmin_bank_accountsInput": { deposit_transaction_id: { nullable: true }, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-unchecked-create-without-players.input"), { "deposit_transactionsUncheckedCreateWithoutPlayersInput": { deposit_transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, admin_bank_account_id_r: {} } }], [import("./@generated/deposit-transactions/deposit-transactions-unchecked-create.input"), { "deposit_transactionsUncheckedCreateInput": { deposit_transaction_id: { nullable: true }, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, admin_bank_account_id_r: {} } }], [import("./@generated/deposit-transactions/deposit-transactions-unchecked-update-many-without-admin-bank-accounts.input"), { "deposit_transactionsUncheckedUpdateManyWithoutAdmin_bank_accountsInput": { deposit_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-unchecked-update-many-without-players-nested.input"), { "deposit_transactionsUncheckedUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-unchecked-update-many-without-players.input"), { "deposit_transactionsUncheckedUpdateManyWithoutPlayersInput": { deposit_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-unchecked-update-many.input"), { "deposit_transactionsUncheckedUpdateManyInput": { deposit_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-unchecked-update-without-admin-bank-accounts.input"), { "deposit_transactionsUncheckedUpdateWithoutAdmin_bank_accountsInput": { deposit_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-unchecked-update-without-players.input"), { "deposit_transactionsUncheckedUpdateWithoutPlayersInput": { deposit_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-unchecked-update.input"), { "deposit_transactionsUncheckedUpdateInput": { deposit_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/deposit-transactions/deposit-transactions-update.input"), { "deposit_transactionsUpdateInput": { deposit_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, players: { nullable: true }, admin_bank_accounts: { nullable: true } } }], [import("./@generated/game-history/game-history-avg-order-by-aggregate.input"), { "game_historyAvgOrderByAggregateInput": { bet_amount: { nullable: true }, win_amount: { nullable: true } } }], [import("./@generated/game-history/game-history-count-order-by-aggregate.input"), { "game_historyCountOrderByAggregateInput": { game_history_id: { nullable: true }, game_id: { nullable: true }, player_id_r: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-history/game-history-create-many.input"), { "game_historyCreateManyInput": { game_history_id: { nullable: true }, game_id: {}, player_id_r: {}, i_gamedesc: {}, bet_amount: {}, win_amount: {}, transaction_date: {}, cdate: { nullable: true } } }], [import("./@generated/players/players-create-without-game-history.input"), { "playersCreateWithoutGame_historyInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, agent: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-create-or-connect-without-game-history.input"), { "playersCreateOrConnectWithoutGame_historyInput": { where: {}, create: {} } }], [import("./@generated/players/players-create-nested-one-without-game-history.input"), { "playersCreateNestedOneWithoutGame_historyInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/game-history/game-history-create-without-game-rebates.input"), { "game_historyCreateWithoutGame_rebatesInput": { game_history_id: { nullable: true }, game_id: {}, i_gamedesc: {}, bet_amount: {}, win_amount: {}, transaction_date: {}, cdate: { nullable: true }, players: {} } }], [import("./@generated/game-history/game-history-create-or-connect-without-game-rebates.input"), { "game_historyCreateOrConnectWithoutGame_rebatesInput": { where: {}, create: {} } }], [import("./@generated/game-history/game-history-create-nested-one-without-game-rebates.input"), { "game_historyCreateNestedOneWithoutGame_rebatesInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/game-history/game-history-create.input"), { "game_historyCreateInput": { game_history_id: { nullable: true }, game_id: {}, i_gamedesc: {}, bet_amount: {}, win_amount: {}, transaction_date: {}, cdate: { nullable: true }, players: {}, game_rebates: { nullable: true } } }], [import("./@generated/game-history/game-history-max-order-by-aggregate.input"), { "game_historyMaxOrderByAggregateInput": { game_history_id: { nullable: true }, game_id: { nullable: true }, player_id_r: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-history/game-history-min-order-by-aggregate.input"), { "game_historyMinOrderByAggregateInput": { game_history_id: { nullable: true }, game_id: { nullable: true }, player_id_r: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-history/game-history-sum-order-by-aggregate.input"), { "game_historySumOrderByAggregateInput": { bet_amount: { nullable: true }, win_amount: { nullable: true } } }], [import("./@generated/game-history/game-history-order-by-with-aggregation.input"), { "game_historyOrderByWithAggregationInput": { game_history_id: { nullable: true }, game_id: { nullable: true }, player_id_r: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _max: { nullable: true }, _min: { nullable: true }, _sum: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-order-by-relation-aggregate.input"), { "game_rebatesOrderByRelationAggregateInput": { _count: { nullable: true } } }], [import("./@generated/game-history/game-history-order-by-with-relation.input"), { "game_historyOrderByWithRelationInput": { game_history_id: { nullable: true }, game_id: { nullable: true }, player_id_r: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true }, players: { nullable: true }, game_rebates: { nullable: true } } }], [import("./@generated/game-history/game-history-scalar-where-with-aggregates.input"), { "game_historyScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, game_history_id: { nullable: true }, game_id: { nullable: true }, player_id_r: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-history/game-history-unchecked-create-nested-many-without-players.input"), { "game_historyUncheckedCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/game-history/game-history-unchecked-create-without-game-rebates.input"), { "game_historyUncheckedCreateWithoutGame_rebatesInput": { game_history_id: { nullable: true }, game_id: {}, player_id_r: {}, i_gamedesc: {}, bet_amount: {}, win_amount: {}, transaction_date: {}, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-unchecked-create-nested-many-without-game-history.input"), { "game_rebatesUncheckedCreateNestedManyWithoutGame_historyInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/game-history/game-history-unchecked-create-without-players.input"), { "game_historyUncheckedCreateWithoutPlayersInput": { game_history_id: { nullable: true }, game_id: {}, i_gamedesc: {}, bet_amount: {}, win_amount: {}, transaction_date: {}, cdate: { nullable: true }, game_rebates: { nullable: true } } }], [import("./@generated/game-history/game-history-unchecked-create.input"), { "game_historyUncheckedCreateInput": { game_history_id: { nullable: true }, game_id: {}, player_id_r: {}, i_gamedesc: {}, bet_amount: {}, win_amount: {}, transaction_date: {}, cdate: { nullable: true }, game_rebates: { nullable: true } } }], [import("./@generated/game-history/game-history-unchecked-update-many-without-players-nested.input"), { "game_historyUncheckedUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/game-history/game-history-unchecked-update-many-without-players.input"), { "game_historyUncheckedUpdateManyWithoutPlayersInput": { game_history_id: { nullable: true }, game_id: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-history/game-history-unchecked-update-many.input"), { "game_historyUncheckedUpdateManyInput": { game_history_id: { nullable: true }, game_id: { nullable: true }, player_id_r: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-history/game-history-unchecked-update-without-game-rebates.input"), { "game_historyUncheckedUpdateWithoutGame_rebatesInput": { game_history_id: { nullable: true }, game_id: { nullable: true }, player_id_r: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-unchecked-update-many-without-game-history-nested.input"), { "game_rebatesUncheckedUpdateManyWithoutGame_historyNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/game-history/game-history-unchecked-update-without-players.input"), { "game_historyUncheckedUpdateWithoutPlayersInput": { game_history_id: { nullable: true }, game_id: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true }, game_rebates: { nullable: true } } }], [import("./@generated/game-history/game-history-unchecked-update.input"), { "game_historyUncheckedUpdateInput": { game_history_id: { nullable: true }, game_id: { nullable: true }, player_id_r: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true }, game_rebates: { nullable: true } } }], [import("./@generated/players/players-update-without-game-history.input"), { "playersUpdateWithoutGame_historyInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, agent: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-upsert-without-game-history.input"), { "playersUpsertWithoutGame_historyInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/players/players-update-to-one-with-where-without-game-history.input"), { "playersUpdateToOneWithWhereWithoutGame_historyInput": { where: { nullable: true }, data: {} } }], [import("./@generated/players/players-update-one-required-without-game-history-nested.input"), { "playersUpdateOneRequiredWithoutGame_historyNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/game-history/game-history-update-without-game-rebates.input"), { "game_historyUpdateWithoutGame_rebatesInput": { game_history_id: { nullable: true }, game_id: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true }, players: { nullable: true } } }], [import("./@generated/game-history/game-history-upsert-without-game-rebates.input"), { "game_historyUpsertWithoutGame_rebatesInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/game-history/game-history-update-to-one-with-where-without-game-rebates.input"), { "game_historyUpdateToOneWithWhereWithoutGame_rebatesInput": { where: { nullable: true }, data: {} } }], [import("./@generated/game-history/game-history-update-one-required-without-game-rebates-nested.input"), { "game_historyUpdateOneRequiredWithoutGame_rebatesNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/game-history/game-history-update.input"), { "game_historyUpdateInput": { game_history_id: { nullable: true }, game_id: { nullable: true }, i_gamedesc: { nullable: true }, bet_amount: { nullable: true }, win_amount: { nullable: true }, transaction_date: { nullable: true }, cdate: { nullable: true }, players: { nullable: true }, game_rebates: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-avg-order-by-aggregate.input"), { "game_rebatesAvgOrderByAggregateInput": { effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-count-order-by-aggregate.input"), { "game_rebatesCountOrderByAggregateInput": { game_rebates_id: { nullable: true }, game_history_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-create-many.input"), { "game_rebatesCreateManyInput": { game_rebates_id: { nullable: true }, game_history_id: {}, merchant_id: {}, game_id: {}, category: {}, effective_bet_amount: {}, rebate_amount: {}, status: {}, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-create.input"), { "game_rebatesCreateInput": { game_rebates_id: { nullable: true }, merchant_id: {}, game_id: {}, category: {}, effective_bet_amount: {}, rebate_amount: {}, status: {}, cdate: { nullable: true }, game_history: {} } }], [import("./@generated/game-rebates/game-rebates-max-order-by-aggregate.input"), { "game_rebatesMaxOrderByAggregateInput": { game_rebates_id: { nullable: true }, game_history_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-min-order-by-aggregate.input"), { "game_rebatesMinOrderByAggregateInput": { game_rebates_id: { nullable: true }, game_history_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-sum-order-by-aggregate.input"), { "game_rebatesSumOrderByAggregateInput": { effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-order-by-with-aggregation.input"), { "game_rebatesOrderByWithAggregationInput": { game_rebates_id: { nullable: true }, game_history_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _max: { nullable: true }, _min: { nullable: true }, _sum: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-order-by-with-relation.input"), { "game_rebatesOrderByWithRelationInput": { game_rebates_id: { nullable: true }, game_history_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true }, game_history: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-scalar-where-with-aggregates.input"), { "game_rebatesScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, game_rebates_id: { nullable: true }, game_history_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-unchecked-create-without-game-history.input"), { "game_rebatesUncheckedCreateWithoutGame_historyInput": { game_rebates_id: { nullable: true }, merchant_id: {}, game_id: {}, category: {}, effective_bet_amount: {}, rebate_amount: {}, status: {}, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-unchecked-create.input"), { "game_rebatesUncheckedCreateInput": { game_rebates_id: { nullable: true }, game_history_id: {}, merchant_id: {}, game_id: {}, category: {}, effective_bet_amount: {}, rebate_amount: {}, status: {}, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-unchecked-update-many-without-game-history.input"), { "game_rebatesUncheckedUpdateManyWithoutGame_historyInput": { game_rebates_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-unchecked-update-many.input"), { "game_rebatesUncheckedUpdateManyInput": { game_rebates_id: { nullable: true }, game_history_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-unchecked-update-without-game-history.input"), { "game_rebatesUncheckedUpdateWithoutGame_historyInput": { game_rebates_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-unchecked-update.input"), { "game_rebatesUncheckedUpdateInput": { game_rebates_id: { nullable: true }, game_history_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/game-rebates/game-rebates-update.input"), { "game_rebatesUpdateInput": { game_rebates_id: { nullable: true }, merchant_id: { nullable: true }, game_id: { nullable: true }, category: { nullable: true }, effective_bet_amount: { nullable: true }, rebate_amount: { nullable: true }, status: { nullable: true }, cdate: { nullable: true }, game_history: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-avg-order-by-aggregate.input"), { "manual_adjustmentsAvgOrderByAggregateInput": { amount: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-count-order-by-aggregate.input"), { "manual_adjustmentsCountOrderByAggregateInput": { manual_adjustment_id: { nullable: true }, player_id_r: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, created_by_r: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-create-many.input"), { "manual_adjustmentsCreateManyInput": { manual_adjustment_id: { nullable: true }, player_id_r: {}, reason: {}, amount: {}, created_by_r: {}, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-create.input"), { "manual_adjustmentsCreateInput": { manual_adjustment_id: { nullable: true }, reason: {}, amount: {}, cdate: { nullable: true }, players: {}, admins: {} } }], [import("./@generated/manual-adjustments/manual-adjustments-max-order-by-aggregate.input"), { "manual_adjustmentsMaxOrderByAggregateInput": { manual_adjustment_id: { nullable: true }, player_id_r: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, created_by_r: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-min-order-by-aggregate.input"), { "manual_adjustmentsMinOrderByAggregateInput": { manual_adjustment_id: { nullable: true }, player_id_r: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, created_by_r: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-sum-order-by-aggregate.input"), { "manual_adjustmentsSumOrderByAggregateInput": { amount: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-order-by-with-aggregation.input"), { "manual_adjustmentsOrderByWithAggregationInput": { manual_adjustment_id: { nullable: true }, player_id_r: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, created_by_r: { nullable: true }, cdate: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _max: { nullable: true }, _min: { nullable: true }, _sum: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-order-by-with-relation.input"), { "manual_adjustmentsOrderByWithRelationInput": { manual_adjustment_id: { nullable: true }, player_id_r: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, created_by_r: { nullable: true }, cdate: { nullable: true }, players: { nullable: true }, admins: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-scalar-where-with-aggregates.input"), { "manual_adjustmentsScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, manual_adjustment_id: { nullable: true }, player_id_r: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, created_by_r: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-unchecked-create-nested-many-without-players.input"), { "manual_adjustmentsUncheckedCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-unchecked-create-without-admins.input"), { "manual_adjustmentsUncheckedCreateWithoutAdminsInput": { manual_adjustment_id: { nullable: true }, player_id_r: {}, reason: {}, amount: {}, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-unchecked-create-without-players.input"), { "manual_adjustmentsUncheckedCreateWithoutPlayersInput": { manual_adjustment_id: { nullable: true }, reason: {}, amount: {}, created_by_r: {}, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-unchecked-create.input"), { "manual_adjustmentsUncheckedCreateInput": { manual_adjustment_id: { nullable: true }, player_id_r: {}, reason: {}, amount: {}, created_by_r: {}, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-unchecked-update-many-without-admins.input"), { "manual_adjustmentsUncheckedUpdateManyWithoutAdminsInput": { manual_adjustment_id: { nullable: true }, player_id_r: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-unchecked-update-many-without-players-nested.input"), { "manual_adjustmentsUncheckedUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-unchecked-update-many-without-players.input"), { "manual_adjustmentsUncheckedUpdateManyWithoutPlayersInput": { manual_adjustment_id: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, created_by_r: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-unchecked-update-many.input"), { "manual_adjustmentsUncheckedUpdateManyInput": { manual_adjustment_id: { nullable: true }, player_id_r: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, created_by_r: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-unchecked-update-without-admins.input"), { "manual_adjustmentsUncheckedUpdateWithoutAdminsInput": { manual_adjustment_id: { nullable: true }, player_id_r: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-unchecked-update-without-players.input"), { "manual_adjustmentsUncheckedUpdateWithoutPlayersInput": { manual_adjustment_id: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, created_by_r: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-unchecked-update.input"), { "manual_adjustmentsUncheckedUpdateInput": { manual_adjustment_id: { nullable: true }, player_id_r: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, created_by_r: { nullable: true }, cdate: { nullable: true } } }], [import("./@generated/manual-adjustments/manual-adjustments-update.input"), { "manual_adjustmentsUpdateInput": { manual_adjustment_id: { nullable: true }, reason: { nullable: true }, amount: { nullable: true }, cdate: { nullable: true }, players: { nullable: true }, admins: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-count-order-by-aggregate.input"), { "player_login_logsCountOrderByAggregateInput": { player_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-create-many.input"), { "player_login_logsCreateManyInput": { player_id_r: {}, ip: {}, login_time: {} } }], [import("./@generated/players/players-create-without-player-login-logs.input"), { "playersCreateWithoutPlayer_login_logsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, agent: {}, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-create-or-connect-without-player-login-logs.input"), { "playersCreateOrConnectWithoutPlayer_login_logsInput": { where: {}, create: {} } }], [import("./@generated/players/players-create-nested-one-without-player-login-logs.input"), { "playersCreateNestedOneWithoutPlayer_login_logsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-create.input"), { "player_login_logsCreateInput": { ip: {}, login_time: {}, players: {} } }], [import("./@generated/player-login-logs/player-login-logs-max-order-by-aggregate.input"), { "player_login_logsMaxOrderByAggregateInput": { player_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-min-order-by-aggregate.input"), { "player_login_logsMinOrderByAggregateInput": { player_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-order-by-with-aggregation.input"), { "player_login_logsOrderByWithAggregationInput": { player_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true }, _count: { nullable: true }, _max: { nullable: true }, _min: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-order-by-with-relation.input"), { "player_login_logsOrderByWithRelationInput": { player_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true }, players: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-scalar-where-with-aggregates.input"), { "player_login_logsScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-unchecked-create-nested-many-without-players.input"), { "player_login_logsUncheckedCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-unchecked-create-without-players.input"), { "player_login_logsUncheckedCreateWithoutPlayersInput": { ip: {}, login_time: {} } }], [import("./@generated/player-login-logs/player-login-logs-unchecked-create.input"), { "player_login_logsUncheckedCreateInput": { player_id_r: {}, ip: {}, login_time: {} } }], [import("./@generated/player-login-logs/player-login-logs-unchecked-update-many-without-players-nested.input"), { "player_login_logsUncheckedUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-unchecked-update-many-without-players.input"), { "player_login_logsUncheckedUpdateManyWithoutPlayersInput": { ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-unchecked-update-many.input"), { "player_login_logsUncheckedUpdateManyInput": { player_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-unchecked-update-without-players.input"), { "player_login_logsUncheckedUpdateWithoutPlayersInput": { ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-unchecked-update.input"), { "player_login_logsUncheckedUpdateInput": { player_id_r: { nullable: true }, ip: { nullable: true }, login_time: { nullable: true } } }], [import("./@generated/players/players-update-without-player-login-logs.input"), { "playersUpdateWithoutPlayer_login_logsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, agent: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-upsert-without-player-login-logs.input"), { "playersUpsertWithoutPlayer_login_logsInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/players/players-update-to-one-with-where-without-player-login-logs.input"), { "playersUpdateToOneWithWhereWithoutPlayer_login_logsInput": { where: { nullable: true }, data: {} } }], [import("./@generated/players/players-update-one-required-without-player-login-logs-nested.input"), { "playersUpdateOneRequiredWithoutPlayer_login_logsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/player-login-logs/player-login-logs-update.input"), { "player_login_logsUpdateInput": { ip: { nullable: true }, login_time: { nullable: true }, players: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-avg-order-by-aggregate.input"), { "player_walletsAvgOrderByAggregateInput": { amount: { nullable: true }, frozen_amount: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-count-order-by-aggregate.input"), { "player_walletsCountOrderByAggregateInput": { player_wallet_id: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-create-many.input"), { "player_walletsCreateManyInput": { player_wallet_id: { nullable: true }, player_id_r: {}, currency: {}, amount: {}, frozen_amount: {}, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/players/players-create-without-player-wallets.input"), { "playersCreateWithoutPlayer_walletsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, agent: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-create-or-connect-without-player-wallets.input"), { "playersCreateOrConnectWithoutPlayer_walletsInput": { where: {}, create: {} } }], [import("./@generated/players/players-create-nested-one-without-player-wallets.input"), { "playersCreateNestedOneWithoutPlayer_walletsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-create.input"), { "player_walletsCreateInput": { player_wallet_id: { nullable: true }, currency: {}, amount: {}, frozen_amount: {}, cdate: { nullable: true }, udate: { nullable: true }, players: {} } }], [import("./@generated/player-wallets/player-wallets-max-order-by-aggregate.input"), { "player_walletsMaxOrderByAggregateInput": { player_wallet_id: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-min-order-by-aggregate.input"), { "player_walletsMinOrderByAggregateInput": { player_wallet_id: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-sum-order-by-aggregate.input"), { "player_walletsSumOrderByAggregateInput": { amount: { nullable: true }, frozen_amount: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-order-by-with-aggregation.input"), { "player_walletsOrderByWithAggregationInput": { player_wallet_id: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _max: { nullable: true }, _min: { nullable: true }, _sum: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-order-by-with-relation.input"), { "player_walletsOrderByWithRelationInput": { player_wallet_id: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, players: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-scalar-where-with-aggregates.input"), { "player_walletsScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_wallet_id: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-unchecked-create-nested-many-without-players.input"), { "player_walletsUncheckedCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-unchecked-create-without-players.input"), { "player_walletsUncheckedCreateWithoutPlayersInput": { player_wallet_id: { nullable: true }, currency: {}, amount: {}, frozen_amount: {}, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-unchecked-create.input"), { "player_walletsUncheckedCreateInput": { player_wallet_id: { nullable: true }, player_id_r: {}, currency: {}, amount: {}, frozen_amount: {}, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-unchecked-update-many-without-players-nested.input"), { "player_walletsUncheckedUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-unchecked-update-many-without-players.input"), { "player_walletsUncheckedUpdateManyWithoutPlayersInput": { player_wallet_id: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-unchecked-update-many.input"), { "player_walletsUncheckedUpdateManyInput": { player_wallet_id: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-unchecked-update-without-players.input"), { "player_walletsUncheckedUpdateWithoutPlayersInput": { player_wallet_id: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-unchecked-update.input"), { "player_walletsUncheckedUpdateInput": { player_wallet_id: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true } } }], [import("./@generated/players/players-update-without-player-wallets.input"), { "playersUpdateWithoutPlayer_walletsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, agent: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-upsert-without-player-wallets.input"), { "playersUpsertWithoutPlayer_walletsInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/players/players-update-to-one-with-where-without-player-wallets.input"), { "playersUpdateToOneWithWhereWithoutPlayer_walletsInput": { where: { nullable: true }, data: {} } }], [import("./@generated/players/players-update-one-required-without-player-wallets-nested.input"), { "playersUpdateOneRequiredWithoutPlayer_walletsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/player-wallets/player-wallets-update.input"), { "player_walletsUpdateInput": { player_wallet_id: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, frozen_amount: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, players: { nullable: true } } }], [import("./@generated/players/players-create-many.input"), { "playersCreateManyInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, agent_id_r: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {} } }], [import("./@generated/players/create-manyplayers.args"), { "CreateManyplayersArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/players/players-create.input"), { "playersCreateInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, agent: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/create-oneplayers.args"), { "CreateOneplayersArgs": { data: {} } }], [import("./@generated/players/delete-manyplayers.args"), { "DeleteManyplayersArgs": { where: { nullable: true } } }], [import("./@generated/players/delete-oneplayers.args"), { "DeleteOneplayersArgs": { where: {} } }], [import("./@generated/players/find-firstplayers-or-throw.args"), { "FindFirstplayersOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/players/find-firstplayers.args"), { "FindFirstplayersArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/players/find-manyplayers.args"), { "FindManyplayersArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/players/find-uniqueplayers-or-throw.args"), { "FindUniqueplayersOrThrowArgs": { where: {} } }], [import("./@generated/players/find-uniqueplayers.args"), { "FindUniqueplayersArgs": { where: {} } }], [import("./@generated/players/players-aggregate.args"), { "playersAggregateArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/players/players-count-order-by-aggregate.input"), { "playersCountOrderByAggregateInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true } } }], [import("./@generated/players/players-create-without-transfer-in-transactions.input"), { "playersCreateWithoutTransfer_in_transactionsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, agent: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-create-or-connect-without-transfer-in-transactions.input"), { "playersCreateOrConnectWithoutTransfer_in_transactionsInput": { where: {}, create: {} } }], [import("./@generated/players/players-create-nested-one-without-transfer-in-transactions.input"), { "playersCreateNestedOneWithoutTransfer_in_transactionsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/players/players-create-without-transfer-out-transactions.input"), { "playersCreateWithoutTransfer_out_transactionsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, agent: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true } } }], [import("./@generated/players/players-create-or-connect-without-transfer-out-transactions.input"), { "playersCreateOrConnectWithoutTransfer_out_transactionsInput": { where: {}, create: {} } }], [import("./@generated/players/players-create-nested-one-without-transfer-out-transactions.input"), { "playersCreateNestedOneWithoutTransfer_out_transactionsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/players/players-create-without-wallet-requests.input"), { "playersCreateWithoutWallet_requestsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, agent: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-create-or-connect-without-wallet-requests.input"), { "playersCreateOrConnectWithoutWallet_requestsInput": { where: {}, create: {} } }], [import("./@generated/players/players-create-nested-one-without-wallet-requests.input"), { "playersCreateNestedOneWithoutWallet_requestsInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/players/players-max-order-by-aggregate.input"), { "playersMaxOrderByAggregateInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true } } }], [import("./@generated/players/players-min-order-by-aggregate.input"), { "playersMinOrderByAggregateInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true } } }], [import("./@generated/players/players-order-by-with-aggregation.input"), { "playersOrderByWithAggregationInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, _count: { nullable: true }, _max: { nullable: true }, _min: { nullable: true } } }], [import("./@generated/players/players-scalar-where-with-aggregates.input"), { "playersScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true } } }], [import("./@generated/players/players-group-by.args"), { "playersGroupByArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-unchecked-create-nested-many-without-players.input"), { "wallet_requestsUncheckedCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-unchecked-create-nested-many-without-players.input"), { "withdrawal_transactionsUncheckedCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-unchecked-create-nested-many-without-players.input"), { "transfer_in_transactionsUncheckedCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-unchecked-create-nested-many-without-players.input"), { "transfer_out_transactionsUncheckedCreateNestedManyWithoutPlayersInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, createMany: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/players/players-unchecked-create-without-agent.input"), { "playersUncheckedCreateWithoutAgentInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-create-without-current-active-players.input"), { "playersUncheckedCreateWithoutCurrent_active_playersInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, agent_id_r: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, player_login_logs: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-create-without-deposit-transactions.input"), { "playersUncheckedCreateWithoutDeposit_transactionsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, agent_id_r: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-create-without-game-history.input"), { "playersUncheckedCreateWithoutGame_historyInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, agent_id_r: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-create-without-manual-adjustments.input"), { "playersUncheckedCreateWithoutManual_adjustmentsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, agent_id_r: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-create-without-player-login-logs.input"), { "playersUncheckedCreateWithoutPlayer_login_logsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, agent_id_r: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-create-without-player-wallets.input"), { "playersUncheckedCreateWithoutPlayer_walletsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, agent_id_r: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-create-without-transfer-in-transactions.input"), { "playersUncheckedCreateWithoutTransfer_in_transactionsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, agent_id_r: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-create-without-transfer-out-transactions.input"), { "playersUncheckedCreateWithoutTransfer_out_transactionsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, agent_id_r: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-create-without-wallet-requests.input"), { "playersUncheckedCreateWithoutWallet_requestsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, agent_id_r: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-create-without-withdrawal-transactions.input"), { "playersUncheckedCreateWithoutWithdrawal_transactionsInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, agent_id_r: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-create.input"), { "playersUncheckedCreateInput": { player_id: { nullable: true }, name: {}, tg_id: {}, tg_first_name: {}, tg_last_name: {}, tg_user_name: {}, tg_photo_url: {}, user_language: {}, registration_ip: {}, agent_id_r: {}, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: {}, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-update-many-without-agent.input"), { "playersUncheckedUpdateManyWithoutAgentInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true } } }], [import("./@generated/players/players-unchecked-update-many.input"), { "playersUncheckedUpdateManyInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-unchecked-update-many-without-players-nested.input"), { "wallet_requestsUncheckedUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-unchecked-update-many-without-players-nested.input"), { "withdrawal_transactionsUncheckedUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-unchecked-update-many-without-players-nested.input"), { "transfer_in_transactionsUncheckedUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-unchecked-update-many-without-players-nested.input"), { "transfer_out_transactionsUncheckedUpdateManyWithoutPlayersNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, createMany: { nullable: true }, set: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true }, updateMany: { nullable: true }, deleteMany: { nullable: true } } }], [import("./@generated/players/players-unchecked-update-without-agent.input"), { "playersUncheckedUpdateWithoutAgentInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-update-without-current-active-players.input"), { "playersUncheckedUpdateWithoutCurrent_active_playersInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, player_login_logs: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-update-without-deposit-transactions.input"), { "playersUncheckedUpdateWithoutDeposit_transactionsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-update-without-game-history.input"), { "playersUncheckedUpdateWithoutGame_historyInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-update-without-manual-adjustments.input"), { "playersUncheckedUpdateWithoutManual_adjustmentsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-update-without-player-login-logs.input"), { "playersUncheckedUpdateWithoutPlayer_login_logsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-update-without-player-wallets.input"), { "playersUncheckedUpdateWithoutPlayer_walletsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-update-without-transfer-in-transactions.input"), { "playersUncheckedUpdateWithoutTransfer_in_transactionsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-update-without-transfer-out-transactions.input"), { "playersUncheckedUpdateWithoutTransfer_out_transactionsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-update-without-wallet-requests.input"), { "playersUncheckedUpdateWithoutWallet_requestsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-update-without-withdrawal-transactions.input"), { "playersUncheckedUpdateWithoutWithdrawal_transactionsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-unchecked-update.input"), { "playersUncheckedUpdateInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, agent_id_r: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-update-without-transfer-in-transactions.input"), { "playersUpdateWithoutTransfer_in_transactionsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, agent: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-upsert-without-transfer-in-transactions.input"), { "playersUpsertWithoutTransfer_in_transactionsInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/players/players-update-to-one-with-where-without-transfer-in-transactions.input"), { "playersUpdateToOneWithWhereWithoutTransfer_in_transactionsInput": { where: { nullable: true }, data: {} } }], [import("./@generated/players/players-update-one-required-without-transfer-in-transactions-nested.input"), { "playersUpdateOneRequiredWithoutTransfer_in_transactionsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/players/players-update-without-transfer-out-transactions.input"), { "playersUpdateWithoutTransfer_out_transactionsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, agent: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true } } }], [import("./@generated/players/players-upsert-without-transfer-out-transactions.input"), { "playersUpsertWithoutTransfer_out_transactionsInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/players/players-update-to-one-with-where-without-transfer-out-transactions.input"), { "playersUpdateToOneWithWhereWithoutTransfer_out_transactionsInput": { where: { nullable: true }, data: {} } }], [import("./@generated/players/players-update-one-required-without-transfer-out-transactions-nested.input"), { "playersUpdateOneRequiredWithoutTransfer_out_transactionsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/players/players-update-without-wallet-requests.input"), { "playersUpdateWithoutWallet_requestsInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, agent: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/players-upsert-without-wallet-requests.input"), { "playersUpsertWithoutWallet_requestsInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/players/players-update-to-one-with-where-without-wallet-requests.input"), { "playersUpdateToOneWithWhereWithoutWallet_requestsInput": { where: { nullable: true }, data: {} } }], [import("./@generated/players/players-update-one-required-without-wallet-requests-nested.input"), { "playersUpdateOneRequiredWithoutWallet_requestsNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/players/players-update.input"), { "playersUpdateInput": { player_id: { nullable: true }, name: { nullable: true }, tg_id: { nullable: true }, tg_first_name: { nullable: true }, tg_last_name: { nullable: true }, tg_user_name: { nullable: true }, tg_photo_url: { nullable: true }, user_language: { nullable: true }, registration_ip: { nullable: true }, cdate: { nullable: true }, udate: { nullable: true }, enabled: { nullable: true }, registration_date: { nullable: true }, agent: { nullable: true }, player_login_logs: { nullable: true }, current_active_players: { nullable: true }, game_history: { nullable: true }, manual_adjustments: { nullable: true }, player_wallets: { nullable: true }, wallet_requests: { nullable: true }, deposit_transactions: { nullable: true }, withdrawal_transactions: { nullable: true }, transfer_in_transactions: { nullable: true }, transfer_out_transactions: { nullable: true } } }], [import("./@generated/players/update-manyplayers.args"), { "UpdateManyplayersArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/players/update-oneplayers.args"), { "UpdateOneplayersArgs": { data: {}, where: {} } }], [import("./@generated/players/upsert-oneplayers.args"), { "UpsertOneplayersArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/aggregateadmin-accesses.args"), { "AggregateadminAccessesArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/aggregateadmin-bank-accounts.args"), { "AggregateadminBankAccountsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/aggregateadmin-login-logs.args"), { "AggregateadminLoginLogsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/aggregateadmin-role-accesses.args"), { "AggregateadminRoleAccessesArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/aggregateadmin-roles.args"), { "AggregateadminRolesArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/aggregateagent-rebates.args"), { "AggregateagentRebatesArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/aggregateall-ow-requests.args"), { "AggregateallOwRequestsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/aggregatecurrent-active-players.args"), { "AggregatecurrentActivePlayersArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/aggregatedeposit-transactions.args"), { "AggregatedepositTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/aggregategame-history.args"), { "AggregategameHistoryArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/aggregategame-rebates.args"), { "AggregategameRebatesArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/aggregatemanual-adjustments.args"), { "AggregatemanualAdjustmentsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/aggregateplayer-login-logs.args"), { "AggregateplayerLoginLogsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/aggregateplayer-wallets.args"), { "AggregateplayerWalletsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-order-by-with-relation.input"), { "transfer_in_transactionsOrderByWithRelationInput": { transfer_in_Transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true }, players: { nullable: true } } }], [import("./@generated/prisma/aggregatetransfer-in-transactions.args"), { "AggregatetransferInTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-order-by-with-relation.input"), { "transfer_out_transactionsOrderByWithRelationInput": { transfer_out_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true }, players: { nullable: true } } }], [import("./@generated/prisma/aggregatetransfer-out-transactions.args"), { "AggregatetransferOutTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-order-by-with-relation.input"), { "wallet_requestsOrderByWithRelationInput": { wallet_request_id: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true }, players: { nullable: true } } }], [import("./@generated/prisma/aggregatewallet-requests.args"), { "AggregatewalletRequestsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-order-by-with-relation.input"), { "withdrawal_transactionsOrderByWithRelationInput": { withdrawal_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true }, players: { nullable: true }, admin_bank_accounts: { nullable: true } } }], [import("./@generated/prisma/aggregatewithdrawal-transactions.args"), { "AggregatewithdrawalTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/create-manyadmin-accesses.args"), { "CreateManyadminAccessesArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-manyadmin-bank-accounts.args"), { "CreateManyadminBankAccountsArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-manyadmin-login-logs.args"), { "CreateManyadminLoginLogsArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-manyadmin-role-accesses.args"), { "CreateManyadminRoleAccessesArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-manyadmin-roles.args"), { "CreateManyadminRolesArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-manyagent-rebates.args"), { "CreateManyagentRebatesArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-manyall-ow-requests.args"), { "CreateManyallOwRequestsArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-manycurrent-active-players.args"), { "CreateManycurrentActivePlayersArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-manydeposit-transactions.args"), { "CreateManydepositTransactionsArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-manygame-history.args"), { "CreateManygameHistoryArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-manygame-rebates.args"), { "CreateManygameRebatesArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-manymanual-adjustments.args"), { "CreateManymanualAdjustmentsArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-manyplayer-login-logs.args"), { "CreateManyplayerLoginLogsArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-manyplayer-wallets.args"), { "CreateManyplayerWalletsArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-create-many.input"), { "transfer_in_transactionsCreateManyInput": { transfer_in_Transaction_id: { nullable: true }, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, counterpart_platform: {}, counterpart_username: {} } }], [import("./@generated/prisma/create-manytransfer-in-transactions.args"), { "CreateManytransferInTransactionsArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-create-many.input"), { "transfer_out_transactionsCreateManyInput": { transfer_out_transaction_id: { nullable: true }, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, counterpart_platform: {}, counterpart_username: {} } }], [import("./@generated/prisma/create-manytransfer-out-transactions.args"), { "CreateManytransferOutTransactionsArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-create-many.input"), { "wallet_requestsCreateManyInput": { wallet_request_id: { nullable: true }, t_id: {}, type: {}, player_id_r: {}, currency: {}, amount: {}, i_game_id: {}, i_extparam: {}, i_rollback: {}, i_gamedesc: {}, i_action_id: {}, i_reference_action_id: {}, round_start: {}, round_ended: {}, game_extra: {}, subtype: {}, jackpot_win: {}, hmac: {}, response: {} } }], [import("./@generated/prisma/create-manywallet-requests.args"), { "CreateManywalletRequestsArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-create-many.input"), { "withdrawal_transactionsCreateManyInput": { withdrawal_transaction_id: { nullable: true }, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, admin_bank_account_id_r: {} } }], [import("./@generated/prisma/create-manywithdrawal-transactions.args"), { "CreateManywithdrawalTransactionsArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-oneadmin-accesses.args"), { "CreateOneadminAccessesArgs": { data: {} } }], [import("./@generated/prisma/create-oneadmin-bank-accounts.args"), { "CreateOneadminBankAccountsArgs": { data: {} } }], [import("./@generated/prisma/create-oneadmin-login-logs.args"), { "CreateOneadminLoginLogsArgs": { data: {} } }], [import("./@generated/prisma/create-oneadmin-role-accesses.args"), { "CreateOneadminRoleAccessesArgs": { data: {} } }], [import("./@generated/prisma/create-oneadmin-roles.args"), { "CreateOneadminRolesArgs": { data: {} } }], [import("./@generated/prisma/create-oneagent-rebates.args"), { "CreateOneagentRebatesArgs": { data: {} } }], [import("./@generated/prisma/create-oneall-ow-requests.args"), { "CreateOneallOwRequestsArgs": { data: {} } }], [import("./@generated/prisma/create-onecurrent-active-players.args"), { "CreateOnecurrentActivePlayersArgs": { data: {} } }], [import("./@generated/prisma/create-onedeposit-transactions.args"), { "CreateOnedepositTransactionsArgs": { data: {} } }], [import("./@generated/prisma/create-onegame-history.args"), { "CreateOnegameHistoryArgs": { data: {} } }], [import("./@generated/prisma/create-onegame-rebates.args"), { "CreateOnegameRebatesArgs": { data: {} } }], [import("./@generated/prisma/create-onemanual-adjustments.args"), { "CreateOnemanualAdjustmentsArgs": { data: {} } }], [import("./@generated/prisma/create-oneplayer-login-logs.args"), { "CreateOneplayerLoginLogsArgs": { data: {} } }], [import("./@generated/prisma/create-oneplayer-wallets.args"), { "CreateOneplayerWalletsArgs": { data: {} } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-create.input"), { "transfer_in_transactionsCreateInput": { transfer_in_Transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, counterpart_platform: {}, counterpart_username: {}, players: {} } }], [import("./@generated/prisma/create-onetransfer-in-transactions.args"), { "CreateOnetransferInTransactionsArgs": { data: {} } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-create.input"), { "transfer_out_transactionsCreateInput": { transfer_out_transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, counterpart_platform: {}, counterpart_username: {}, players: {} } }], [import("./@generated/prisma/create-onetransfer-out-transactions.args"), { "CreateOnetransferOutTransactionsArgs": { data: {} } }], [import("./@generated/wallet-requests/wallet-requests-create.input"), { "wallet_requestsCreateInput": { wallet_request_id: { nullable: true }, t_id: {}, type: {}, currency: {}, amount: {}, i_game_id: {}, i_extparam: {}, i_rollback: {}, i_gamedesc: {}, i_action_id: {}, i_reference_action_id: {}, round_start: {}, round_ended: {}, game_extra: {}, subtype: {}, jackpot_win: {}, hmac: {}, response: {}, players: {} } }], [import("./@generated/prisma/create-onewallet-requests.args"), { "CreateOnewalletRequestsArgs": { data: {} } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-create.input"), { "withdrawal_transactionsCreateInput": { withdrawal_transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, players: {}, admin_bank_accounts: {} } }], [import("./@generated/prisma/create-onewithdrawal-transactions.args"), { "CreateOnewithdrawalTransactionsArgs": { data: {} } }], [import("./@generated/prisma/delete-manyadmin-accesses.args"), { "DeleteManyadminAccessesArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manyadmin-bank-accounts.args"), { "DeleteManyadminBankAccountsArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manyadmin-login-logs.args"), { "DeleteManyadminLoginLogsArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manyadmin-role-accesses.args"), { "DeleteManyadminRoleAccessesArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manyadmin-roles.args"), { "DeleteManyadminRolesArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manyagent-rebates.args"), { "DeleteManyagentRebatesArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manyall-ow-requests.args"), { "DeleteManyallOwRequestsArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manycurrent-active-players.args"), { "DeleteManycurrentActivePlayersArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manydeposit-transactions.args"), { "DeleteManydepositTransactionsArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manygame-history.args"), { "DeleteManygameHistoryArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manygame-rebates.args"), { "DeleteManygameRebatesArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manymanual-adjustments.args"), { "DeleteManymanualAdjustmentsArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manyplayer-login-logs.args"), { "DeleteManyplayerLoginLogsArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manyplayer-wallets.args"), { "DeleteManyplayerWalletsArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manytransfer-in-transactions.args"), { "DeleteManytransferInTransactionsArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manytransfer-out-transactions.args"), { "DeleteManytransferOutTransactionsArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manywallet-requests.args"), { "DeleteManywalletRequestsArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-manywithdrawal-transactions.args"), { "DeleteManywithdrawalTransactionsArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-oneadmin-accesses.args"), { "DeleteOneadminAccessesArgs": { where: {} } }], [import("./@generated/prisma/delete-oneadmin-bank-accounts.args"), { "DeleteOneadminBankAccountsArgs": { where: {} } }], [import("./@generated/prisma/delete-oneadmin-login-logs.args"), { "DeleteOneadminLoginLogsArgs": { where: {} } }], [import("./@generated/prisma/delete-oneadmin-role-accesses.args"), { "DeleteOneadminRoleAccessesArgs": { where: {} } }], [import("./@generated/prisma/delete-oneadmin-roles.args"), { "DeleteOneadminRolesArgs": { where: {} } }], [import("./@generated/prisma/delete-oneagent-rebates.args"), { "DeleteOneagentRebatesArgs": { where: {} } }], [import("./@generated/prisma/delete-oneall-ow-requests.args"), { "DeleteOneallOwRequestsArgs": { where: {} } }], [import("./@generated/prisma/delete-onecurrent-active-players.args"), { "DeleteOnecurrentActivePlayersArgs": { where: {} } }], [import("./@generated/prisma/delete-onedeposit-transactions.args"), { "DeleteOnedepositTransactionsArgs": { where: {} } }], [import("./@generated/prisma/delete-onegame-history.args"), { "DeleteOnegameHistoryArgs": { where: {} } }], [import("./@generated/prisma/delete-onegame-rebates.args"), { "DeleteOnegameRebatesArgs": { where: {} } }], [import("./@generated/prisma/delete-onemanual-adjustments.args"), { "DeleteOnemanualAdjustmentsArgs": { where: {} } }], [import("./@generated/prisma/delete-oneplayer-login-logs.args"), { "DeleteOneplayerLoginLogsArgs": { where: {} } }], [import("./@generated/prisma/delete-oneplayer-wallets.args"), { "DeleteOneplayerWalletsArgs": { where: {} } }], [import("./@generated/prisma/delete-onetransfer-in-transactions.args"), { "DeleteOnetransferInTransactionsArgs": { where: {} } }], [import("./@generated/prisma/delete-onetransfer-out-transactions.args"), { "DeleteOnetransferOutTransactionsArgs": { where: {} } }], [import("./@generated/prisma/delete-onewallet-requests.args"), { "DeleteOnewalletRequestsArgs": { where: {} } }], [import("./@generated/prisma/delete-onewithdrawal-transactions.args"), { "DeleteOnewithdrawalTransactionsArgs": { where: {} } }], [import("./@generated/prisma/find-firstadmin-accesses-or-throw.args"), { "FindFirstadminAccessesOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstadmin-accesses.args"), { "FindFirstadminAccessesArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstadmin-bank-accounts-or-throw.args"), { "FindFirstadminBankAccountsOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstadmin-bank-accounts.args"), { "FindFirstadminBankAccountsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstadmin-login-logs-or-throw.args"), { "FindFirstadminLoginLogsOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstadmin-login-logs.args"), { "FindFirstadminLoginLogsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstadmin-role-accesses-or-throw.args"), { "FindFirstadminRoleAccessesOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstadmin-role-accesses.args"), { "FindFirstadminRoleAccessesArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstadmin-roles-or-throw.args"), { "FindFirstadminRolesOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstadmin-roles.args"), { "FindFirstadminRolesArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstagent-rebates-or-throw.args"), { "FindFirstagentRebatesOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstagent-rebates.args"), { "FindFirstagentRebatesArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstall-ow-requests-or-throw.args"), { "FindFirstallOwRequestsOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstall-ow-requests.args"), { "FindFirstallOwRequestsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstcurrent-active-players-or-throw.args"), { "FindFirstcurrentActivePlayersOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstcurrent-active-players.args"), { "FindFirstcurrentActivePlayersArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstdeposit-transactions-or-throw.args"), { "FindFirstdepositTransactionsOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstdeposit-transactions.args"), { "FindFirstdepositTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstgame-history-or-throw.args"), { "FindFirstgameHistoryOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstgame-history.args"), { "FindFirstgameHistoryArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstgame-rebates-or-throw.args"), { "FindFirstgameRebatesOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstgame-rebates.args"), { "FindFirstgameRebatesArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstmanual-adjustments-or-throw.args"), { "FindFirstmanualAdjustmentsOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstmanual-adjustments.args"), { "FindFirstmanualAdjustmentsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstplayer-login-logs-or-throw.args"), { "FindFirstplayerLoginLogsOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstplayer-login-logs.args"), { "FindFirstplayerLoginLogsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstplayer-wallets-or-throw.args"), { "FindFirstplayerWalletsOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstplayer-wallets.args"), { "FindFirstplayerWalletsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firsttransfer-in-transactions-or-throw.args"), { "FindFirsttransferInTransactionsOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firsttransfer-in-transactions.args"), { "FindFirsttransferInTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firsttransfer-out-transactions-or-throw.args"), { "FindFirsttransferOutTransactionsOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firsttransfer-out-transactions.args"), { "FindFirsttransferOutTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstwallet-requests-or-throw.args"), { "FindFirstwalletRequestsOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstwallet-requests.args"), { "FindFirstwalletRequestsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstwithdrawal-transactions-or-throw.args"), { "FindFirstwithdrawalTransactionsOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-firstwithdrawal-transactions.args"), { "FindFirstwithdrawalTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manyadmin-accesses.args"), { "FindManyadminAccessesArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manyadmin-bank-accounts.args"), { "FindManyadminBankAccountsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manyadmin-login-logs.args"), { "FindManyadminLoginLogsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manyadmin-role-accesses.args"), { "FindManyadminRoleAccessesArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manyadmin-roles.args"), { "FindManyadminRolesArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manyagent-rebates.args"), { "FindManyagentRebatesArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manyall-ow-requests.args"), { "FindManyallOwRequestsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manycurrent-active-players.args"), { "FindManycurrentActivePlayersArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manydeposit-transactions.args"), { "FindManydepositTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manygame-history.args"), { "FindManygameHistoryArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manygame-rebates.args"), { "FindManygameRebatesArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manymanual-adjustments.args"), { "FindManymanualAdjustmentsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manyplayer-login-logs.args"), { "FindManyplayerLoginLogsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manyplayer-wallets.args"), { "FindManyplayerWalletsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manytransfer-in-transactions.args"), { "FindManytransferInTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manytransfer-out-transactions.args"), { "FindManytransferOutTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manywallet-requests.args"), { "FindManywalletRequestsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-manywithdrawal-transactions.args"), { "FindManywithdrawalTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-uniqueadmin-accesses-or-throw.args"), { "FindUniqueadminAccessesOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueadmin-accesses.args"), { "FindUniqueadminAccessesArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueadmin-bank-accounts-or-throw.args"), { "FindUniqueadminBankAccountsOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueadmin-bank-accounts.args"), { "FindUniqueadminBankAccountsArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueadmin-login-logs-or-throw.args"), { "FindUniqueadminLoginLogsOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueadmin-login-logs.args"), { "FindUniqueadminLoginLogsArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueadmin-role-accesses-or-throw.args"), { "FindUniqueadminRoleAccessesOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueadmin-role-accesses.args"), { "FindUniqueadminRoleAccessesArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueadmin-roles-or-throw.args"), { "FindUniqueadminRolesOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueadmin-roles.args"), { "FindUniqueadminRolesArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueagent-rebates-or-throw.args"), { "FindUniqueagentRebatesOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueagent-rebates.args"), { "FindUniqueagentRebatesArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueall-ow-requests-or-throw.args"), { "FindUniqueallOwRequestsOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueall-ow-requests.args"), { "FindUniqueallOwRequestsArgs": { where: {} } }], [import("./@generated/prisma/find-uniquecurrent-active-players-or-throw.args"), { "FindUniquecurrentActivePlayersOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniquecurrent-active-players.args"), { "FindUniquecurrentActivePlayersArgs": { where: {} } }], [import("./@generated/prisma/find-uniquedeposit-transactions-or-throw.args"), { "FindUniquedepositTransactionsOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniquedeposit-transactions.args"), { "FindUniquedepositTransactionsArgs": { where: {} } }], [import("./@generated/prisma/find-uniquegame-history-or-throw.args"), { "FindUniquegameHistoryOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniquegame-history.args"), { "FindUniquegameHistoryArgs": { where: {} } }], [import("./@generated/prisma/find-uniquegame-rebates-or-throw.args"), { "FindUniquegameRebatesOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniquegame-rebates.args"), { "FindUniquegameRebatesArgs": { where: {} } }], [import("./@generated/prisma/find-uniquemanual-adjustments-or-throw.args"), { "FindUniquemanualAdjustmentsOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniquemanual-adjustments.args"), { "FindUniquemanualAdjustmentsArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueplayer-login-logs-or-throw.args"), { "FindUniqueplayerLoginLogsOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueplayer-login-logs.args"), { "FindUniqueplayerLoginLogsArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueplayer-wallets-or-throw.args"), { "FindUniqueplayerWalletsOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniqueplayer-wallets.args"), { "FindUniqueplayerWalletsArgs": { where: {} } }], [import("./@generated/prisma/find-uniquetransfer-in-transactions-or-throw.args"), { "FindUniquetransferInTransactionsOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniquetransfer-in-transactions.args"), { "FindUniquetransferInTransactionsArgs": { where: {} } }], [import("./@generated/prisma/find-uniquetransfer-out-transactions-or-throw.args"), { "FindUniquetransferOutTransactionsOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniquetransfer-out-transactions.args"), { "FindUniquetransferOutTransactionsArgs": { where: {} } }], [import("./@generated/prisma/find-uniquewallet-requests-or-throw.args"), { "FindUniquewalletRequestsOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniquewallet-requests.args"), { "FindUniquewalletRequestsArgs": { where: {} } }], [import("./@generated/prisma/find-uniquewithdrawal-transactions-or-throw.args"), { "FindUniquewithdrawalTransactionsOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-uniquewithdrawal-transactions.args"), { "FindUniquewithdrawalTransactionsArgs": { where: {} } }], [import("./@generated/prisma/group-byadmin-accesses.args"), { "GroupByadminAccessesArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/group-byadmin-bank-accounts.args"), { "GroupByadminBankAccountsArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/group-byadmin-login-logs.args"), { "GroupByadminLoginLogsArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/group-byadmin-role-accesses.args"), { "GroupByadminRoleAccessesArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/group-byadmin-roles.args"), { "GroupByadminRolesArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/group-byagent-rebates.args"), { "GroupByagentRebatesArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/group-byall-ow-requests.args"), { "GroupByallOwRequestsArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/group-bycurrent-active-players.args"), { "GroupBycurrentActivePlayersArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/group-bydeposit-transactions.args"), { "GroupBydepositTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/group-bygame-history.args"), { "GroupBygameHistoryArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/group-bygame-rebates.args"), { "GroupBygameRebatesArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/group-bymanual-adjustments.args"), { "GroupBymanualAdjustmentsArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/group-byplayer-login-logs.args"), { "GroupByplayerLoginLogsArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/group-byplayer-wallets.args"), { "GroupByplayerWalletsArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-count-order-by-aggregate.input"), { "transfer_in_transactionsCountOrderByAggregateInput": { transfer_in_Transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-avg-order-by-aggregate.input"), { "transfer_in_transactionsAvgOrderByAggregateInput": { amount: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-max-order-by-aggregate.input"), { "transfer_in_transactionsMaxOrderByAggregateInput": { transfer_in_Transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-min-order-by-aggregate.input"), { "transfer_in_transactionsMinOrderByAggregateInput": { transfer_in_Transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-sum-order-by-aggregate.input"), { "transfer_in_transactionsSumOrderByAggregateInput": { amount: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-order-by-with-aggregation.input"), { "transfer_in_transactionsOrderByWithAggregationInput": { transfer_in_Transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _max: { nullable: true }, _min: { nullable: true }, _sum: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-scalar-where-with-aggregates.input"), { "transfer_in_transactionsScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, transfer_in_Transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/prisma/group-bytransfer-in-transactions.args"), { "GroupBytransferInTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-count-order-by-aggregate.input"), { "transfer_out_transactionsCountOrderByAggregateInput": { transfer_out_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-avg-order-by-aggregate.input"), { "transfer_out_transactionsAvgOrderByAggregateInput": { amount: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-max-order-by-aggregate.input"), { "transfer_out_transactionsMaxOrderByAggregateInput": { transfer_out_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-min-order-by-aggregate.input"), { "transfer_out_transactionsMinOrderByAggregateInput": { transfer_out_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-sum-order-by-aggregate.input"), { "transfer_out_transactionsSumOrderByAggregateInput": { amount: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-order-by-with-aggregation.input"), { "transfer_out_transactionsOrderByWithAggregationInput": { transfer_out_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _max: { nullable: true }, _min: { nullable: true }, _sum: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-scalar-where-with-aggregates.input"), { "transfer_out_transactionsScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, transfer_out_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/prisma/group-bytransfer-out-transactions.args"), { "GroupBytransferOutTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-count-order-by-aggregate.input"), { "wallet_requestsCountOrderByAggregateInput": { wallet_request_id: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-avg-order-by-aggregate.input"), { "wallet_requestsAvgOrderByAggregateInput": { jackpot_win: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-max-order-by-aggregate.input"), { "wallet_requestsMaxOrderByAggregateInput": { wallet_request_id: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-min-order-by-aggregate.input"), { "wallet_requestsMinOrderByAggregateInput": { wallet_request_id: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-sum-order-by-aggregate.input"), { "wallet_requestsSumOrderByAggregateInput": { jackpot_win: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-order-by-with-aggregation.input"), { "wallet_requestsOrderByWithAggregationInput": { wallet_request_id: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _max: { nullable: true }, _min: { nullable: true }, _sum: { nullable: true } } }], [import("./@generated/prisma/nested-int-with-aggregates-filter.input"), { "NestedIntWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _sum: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/int-with-aggregates-filter.input"), { "IntWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _sum: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-scalar-where-with-aggregates.input"), { "wallet_requestsScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, wallet_request_id: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true } } }], [import("./@generated/prisma/group-bywallet-requests.args"), { "GroupBywalletRequestsArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-count-order-by-aggregate.input"), { "withdrawal_transactionsCountOrderByAggregateInput": { withdrawal_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-avg-order-by-aggregate.input"), { "withdrawal_transactionsAvgOrderByAggregateInput": { amount: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-max-order-by-aggregate.input"), { "withdrawal_transactionsMaxOrderByAggregateInput": { withdrawal_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-min-order-by-aggregate.input"), { "withdrawal_transactionsMinOrderByAggregateInput": { withdrawal_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-sum-order-by-aggregate.input"), { "withdrawal_transactionsSumOrderByAggregateInput": { amount: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-order-by-with-aggregation.input"), { "withdrawal_transactionsOrderByWithAggregationInput": { withdrawal_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _max: { nullable: true }, _min: { nullable: true }, _sum: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-scalar-where-with-aggregates.input"), { "withdrawal_transactionsScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, withdrawal_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/prisma/group-bywithdrawal-transactions.args"), { "GroupBywithdrawalTransactionsArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/update-manyadmin-accesses.args"), { "UpdateManyadminAccessesArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manyadmin-bank-accounts.args"), { "UpdateManyadminBankAccountsArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manyadmin-login-logs.args"), { "UpdateManyadminLoginLogsArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manyadmin-role-accesses.args"), { "UpdateManyadminRoleAccessesArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manyadmin-roles.args"), { "UpdateManyadminRolesArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manyagent-rebates.args"), { "UpdateManyagentRebatesArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manyall-ow-requests.args"), { "UpdateManyallOwRequestsArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manycurrent-active-players.args"), { "UpdateManycurrentActivePlayersArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manydeposit-transactions.args"), { "UpdateManydepositTransactionsArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manygame-history.args"), { "UpdateManygameHistoryArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manygame-rebates.args"), { "UpdateManygameRebatesArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manymanual-adjustments.args"), { "UpdateManymanualAdjustmentsArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manyplayer-login-logs.args"), { "UpdateManyplayerLoginLogsArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manyplayer-wallets.args"), { "UpdateManyplayerWalletsArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manytransfer-in-transactions.args"), { "UpdateManytransferInTransactionsArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manytransfer-out-transactions.args"), { "UpdateManytransferOutTransactionsArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manywallet-requests.args"), { "UpdateManywalletRequestsArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-manywithdrawal-transactions.args"), { "UpdateManywithdrawalTransactionsArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-oneadmin-accesses.args"), { "UpdateOneadminAccessesArgs": { data: {}, where: {} } }], [import("./@generated/prisma/update-oneadmin-bank-accounts.args"), { "UpdateOneadminBankAccountsArgs": { data: {}, where: {} } }], [import("./@generated/prisma/update-oneadmin-login-logs.args"), { "UpdateOneadminLoginLogsArgs": { data: {}, where: {} } }], [import("./@generated/prisma/update-oneadmin-role-accesses.args"), { "UpdateOneadminRoleAccessesArgs": { data: {}, where: {} } }], [import("./@generated/prisma/update-oneadmin-roles.args"), { "UpdateOneadminRolesArgs": { data: {}, where: {} } }], [import("./@generated/prisma/update-oneagent-rebates.args"), { "UpdateOneagentRebatesArgs": { data: {}, where: {} } }], [import("./@generated/prisma/update-oneall-ow-requests.args"), { "UpdateOneallOwRequestsArgs": { data: {}, where: {} } }], [import("./@generated/prisma/update-onecurrent-active-players.args"), { "UpdateOnecurrentActivePlayersArgs": { data: {}, where: {} } }], [import("./@generated/prisma/update-onedeposit-transactions.args"), { "UpdateOnedepositTransactionsArgs": { data: {}, where: {} } }], [import("./@generated/prisma/update-onegame-history.args"), { "UpdateOnegameHistoryArgs": { data: {}, where: {} } }], [import("./@generated/prisma/update-onegame-rebates.args"), { "UpdateOnegameRebatesArgs": { data: {}, where: {} } }], [import("./@generated/prisma/update-onemanual-adjustments.args"), { "UpdateOnemanualAdjustmentsArgs": { data: {}, where: {} } }], [import("./@generated/prisma/update-oneplayer-login-logs.args"), { "UpdateOneplayerLoginLogsArgs": { data: {}, where: {} } }], [import("./@generated/prisma/update-oneplayer-wallets.args"), { "UpdateOneplayerWalletsArgs": { data: {}, where: {} } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-update.input"), { "transfer_in_transactionsUpdateInput": { transfer_in_Transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true }, players: { nullable: true } } }], [import("./@generated/prisma/update-onetransfer-in-transactions.args"), { "UpdateOnetransferInTransactionsArgs": { data: {}, where: {} } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-update.input"), { "transfer_out_transactionsUpdateInput": { transfer_out_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true }, players: { nullable: true } } }], [import("./@generated/prisma/update-onetransfer-out-transactions.args"), { "UpdateOnetransferOutTransactionsArgs": { data: {}, where: {} } }], [import("./@generated/wallet-requests/wallet-requests-update.input"), { "wallet_requestsUpdateInput": { wallet_request_id: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true }, players: { nullable: true } } }], [import("./@generated/prisma/update-onewallet-requests.args"), { "UpdateOnewalletRequestsArgs": { data: {}, where: {} } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-update.input"), { "withdrawal_transactionsUpdateInput": { withdrawal_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, players: { nullable: true }, admin_bank_accounts: { nullable: true } } }], [import("./@generated/prisma/update-onewithdrawal-transactions.args"), { "UpdateOnewithdrawalTransactionsArgs": { data: {}, where: {} } }], [import("./@generated/prisma/upsert-oneadmin-accesses.args"), { "UpsertOneadminAccessesArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-oneadmin-bank-accounts.args"), { "UpsertOneadminBankAccountsArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-oneadmin-login-logs.args"), { "UpsertOneadminLoginLogsArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-oneadmin-role-accesses.args"), { "UpsertOneadminRoleAccessesArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-oneadmin-roles.args"), { "UpsertOneadminRolesArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-oneagent-rebates.args"), { "UpsertOneagentRebatesArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-oneall-ow-requests.args"), { "UpsertOneallOwRequestsArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-onecurrent-active-players.args"), { "UpsertOnecurrentActivePlayersArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-onedeposit-transactions.args"), { "UpsertOnedepositTransactionsArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-onegame-history.args"), { "UpsertOnegameHistoryArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-onegame-rebates.args"), { "UpsertOnegameRebatesArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-onemanual-adjustments.args"), { "UpsertOnemanualAdjustmentsArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-oneplayer-login-logs.args"), { "UpsertOneplayerLoginLogsArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-oneplayer-wallets.args"), { "UpsertOneplayerWalletsArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-onetransfer-in-transactions.args"), { "UpsertOnetransferInTransactionsArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-onetransfer-out-transactions.args"), { "UpsertOnetransferOutTransactionsArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-onewallet-requests.args"), { "UpsertOnewalletRequestsArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-onewithdrawal-transactions.args"), { "UpsertOnewithdrawalTransactionsArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-unchecked-create-without-players.input"), { "transfer_in_transactionsUncheckedCreateWithoutPlayersInput": { transfer_in_Transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, counterpart_platform: {}, counterpart_username: {} } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-unchecked-create.input"), { "transfer_in_transactionsUncheckedCreateInput": { transfer_in_Transaction_id: { nullable: true }, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, counterpart_platform: {}, counterpart_username: {} } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-unchecked-update-many-without-players.input"), { "transfer_in_transactionsUncheckedUpdateManyWithoutPlayersInput": { transfer_in_Transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-unchecked-update-many.input"), { "transfer_in_transactionsUncheckedUpdateManyInput": { transfer_in_Transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-unchecked-update-without-players.input"), { "transfer_in_transactionsUncheckedUpdateWithoutPlayersInput": { transfer_in_Transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-in-transactions/transfer-in-transactions-unchecked-update.input"), { "transfer_in_transactionsUncheckedUpdateInput": { transfer_in_Transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-unchecked-create-without-players.input"), { "transfer_out_transactionsUncheckedCreateWithoutPlayersInput": { transfer_out_transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, counterpart_platform: {}, counterpart_username: {} } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-unchecked-create.input"), { "transfer_out_transactionsUncheckedCreateInput": { transfer_out_transaction_id: { nullable: true }, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, counterpart_platform: {}, counterpart_username: {} } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-unchecked-update-many-without-players.input"), { "transfer_out_transactionsUncheckedUpdateManyWithoutPlayersInput": { transfer_out_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-unchecked-update-many.input"), { "transfer_out_transactionsUncheckedUpdateManyInput": { transfer_out_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-unchecked-update-without-players.input"), { "transfer_out_transactionsUncheckedUpdateWithoutPlayersInput": { transfer_out_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/transfer-out-transactions/transfer-out-transactions-unchecked-update.input"), { "transfer_out_transactionsUncheckedUpdateInput": { transfer_out_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, counterpart_platform: { nullable: true }, counterpart_username: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-unchecked-create-without-players.input"), { "wallet_requestsUncheckedCreateWithoutPlayersInput": { wallet_request_id: { nullable: true }, t_id: {}, type: {}, currency: {}, amount: {}, i_game_id: {}, i_extparam: {}, i_rollback: {}, i_gamedesc: {}, i_action_id: {}, i_reference_action_id: {}, round_start: {}, round_ended: {}, game_extra: {}, subtype: {}, jackpot_win: {}, hmac: {}, response: {} } }], [import("./@generated/wallet-requests/wallet-requests-unchecked-create.input"), { "wallet_requestsUncheckedCreateInput": { wallet_request_id: { nullable: true }, t_id: {}, type: {}, player_id_r: {}, currency: {}, amount: {}, i_game_id: {}, i_extparam: {}, i_rollback: {}, i_gamedesc: {}, i_action_id: {}, i_reference_action_id: {}, round_start: {}, round_ended: {}, game_extra: {}, subtype: {}, jackpot_win: {}, hmac: {}, response: {} } }], [import("./@generated/wallet-requests/wallet-requests-unchecked-update-many-without-players.input"), { "wallet_requestsUncheckedUpdateManyWithoutPlayersInput": { wallet_request_id: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-unchecked-update-many.input"), { "wallet_requestsUncheckedUpdateManyInput": { wallet_request_id: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-unchecked-update-without-players.input"), { "wallet_requestsUncheckedUpdateWithoutPlayersInput": { wallet_request_id: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true } } }], [import("./@generated/wallet-requests/wallet-requests-unchecked-update.input"), { "wallet_requestsUncheckedUpdateInput": { wallet_request_id: { nullable: true }, t_id: { nullable: true }, type: { nullable: true }, player_id_r: { nullable: true }, currency: { nullable: true }, amount: { nullable: true }, i_game_id: { nullable: true }, i_extparam: { nullable: true }, i_rollback: { nullable: true }, i_gamedesc: { nullable: true }, i_action_id: { nullable: true }, i_reference_action_id: { nullable: true }, round_start: { nullable: true }, round_ended: { nullable: true }, game_extra: { nullable: true }, subtype: { nullable: true }, jackpot_win: { nullable: true }, hmac: { nullable: true }, response: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-unchecked-create-without-admin-bank-accounts.input"), { "withdrawal_transactionsUncheckedCreateWithoutAdmin_bank_accountsInput": { withdrawal_transaction_id: { nullable: true }, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-unchecked-create-without-players.input"), { "withdrawal_transactionsUncheckedCreateWithoutPlayersInput": { withdrawal_transaction_id: { nullable: true }, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, admin_bank_account_id_r: {} } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-unchecked-create.input"), { "withdrawal_transactionsUncheckedCreateInput": { withdrawal_transaction_id: { nullable: true }, player_id_r: {}, amount: {}, currency: {}, request_time: {}, process_time: {}, processed_by: {}, transaction_date: {}, status: { nullable: true }, admin_bank_account_id_r: {} } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-unchecked-update-many-without-admin-bank-accounts.input"), { "withdrawal_transactionsUncheckedUpdateManyWithoutAdmin_bank_accountsInput": { withdrawal_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-unchecked-update-many-without-players.input"), { "withdrawal_transactionsUncheckedUpdateManyWithoutPlayersInput": { withdrawal_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-unchecked-update-many.input"), { "withdrawal_transactionsUncheckedUpdateManyInput": { withdrawal_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-unchecked-update-without-admin-bank-accounts.input"), { "withdrawal_transactionsUncheckedUpdateWithoutAdmin_bank_accountsInput": { withdrawal_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-unchecked-update-without-players.input"), { "withdrawal_transactionsUncheckedUpdateWithoutPlayersInput": { withdrawal_transaction_id: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./@generated/withdrawal-transactions/withdrawal-transactions-unchecked-update.input"), { "withdrawal_transactionsUncheckedUpdateInput": { withdrawal_transaction_id: { nullable: true }, player_id_r: { nullable: true }, amount: { nullable: true }, currency: { nullable: true }, request_time: { nullable: true }, process_time: { nullable: true }, processed_by: { nullable: true }, transaction_date: { nullable: true }, status: { nullable: true }, admin_bank_account_id_r: { nullable: true } } }], [import("./common/models/base.model"), { "BaseModel": { id: {}, createdAt: {}, updatedAt: {} } }], [import("./common/pagination/page-info.model"), { "PageInfo": { endCursor: { nullable: true }, hasNextPage: {}, hasPreviousPage: {}, startCursor: { nullable: true } } }], [import("./common/pagination/pagination.args"), { "PaginationArgs": { skip: { nullable: true, type: () => Number }, after: { nullable: true, type: () => String }, before: { nullable: true, type: () => String }, first: { nullable: true, type: () => Number }, last: { nullable: true, type: () => Number } } }]] } };
};